package DataRequest;

import java.util.ArrayList;
import java.util.Random;
import java.io.IOException;

import com.bloomberglp.blpapi.CorrelationID;
import com.bloomberglp.blpapi.Element;
import com.bloomberglp.blpapi.Event;
import com.bloomberglp.blpapi.Message;
import com.bloomberglp.blpapi.MessageIterator;
import com.bloomberglp.blpapi.Name;
import com.bloomberglp.blpapi.Request;
import com.bloomberglp.blpapi.Service;
import com.bloomberglp.blpapi.Session;
import com.bloomberglp.blpapi.SessionOptions;

public class SearchBloomberg {
	private static final Name SECURITY_DATA = new Name("securityData");
    private static final Name SECURITY = new Name("security");
    private static final Name FIELD_DATA = new Name("fieldData");
    private static final Name FIELD_EXCEPTIONS = new Name("fieldExceptions");
    private static final Name FIELD_ID = new Name("fieldId");
    private static final Name ERROR_INFO = new Name("errorInfo");

	private ArrayList<DataValue> searchList;

	public SearchBloomberg(){
		searchList=new ArrayList<DataValue>();
		populateSearchList();
	}
	
	public void populateSearchList(){
		searchList.add(new DataValue("united_kingdom","Average rainfall in the UK per year (in mm)","UKWSRAIN index","PX_LAST"));
		searchList.add(new DataValue("china","Cumulative number of deaths from SARS","WSARDCHN index","PX_LAST"));
		searchList.add(new DataValue("china","Cumulative number of reported cases of SARS","WSARCCHN index","PX_LAST"));
		searchList.add(new DataValue("world","Cumulative number of reported cases of SARS","WSARCTOT index","PX_LAST"));
		searchList.add(new DataValue("world","Cumulative number of deaths from SARS","WSARDTOT index","PX_LAST"));
		searchList.add(new DataValue("canada","Cumulative number of reported cases of SARS","WSARCCAN index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","Cumulative number of deaths from SARS","WSARDHK index","PX_LAST"));
		searchList.add(new DataValue("united_states","Cumulative number of reported cases of SARS","WSARCUS index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","Cumulative number of reported cases of SARS","WSARCHK index","PX_LAST"));
		searchList.add(new DataValue("australia","Cumulative number of reported cases of SARS","WSARCAUS index","PX_LAST"));
		searchList.add(new DataValue("brazil","Cumulative number of reported cases of SARS","WSARCBRA index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","Cumulative number of reported cases of SARS","WSARCBUL index","PX_LAST"));
		searchList.add(new DataValue("columbia","Cumulative number of reported cases of SARS","WSARCCOM index","PX_LAST"));
		searchList.add(new DataValue("finland","Cumulative number of reported cases of SARS","WSARCFIN index","PX_LAST"));
		searchList.add(new DataValue("france","Cumulative number of reported cases of SARS","WSARCFRA index","PX_LAST"));
		searchList.add(new DataValue("germany","Cumulative number of reported cases of SARS","WSARCGER index","PX_LAST"));
		searchList.add(new DataValue("indonesia","Cumulative number of reported cases of SARS","WSARCID index","PX_LAST"));
		searchList.add(new DataValue("india","Cumulative number of reported cases of SARS","WSARCIND index","PX_LAST"));
		searchList.add(new DataValue("ireland","Cumulative number of reported cases of SARS","WSARCIRE index","PX_LAST"));
		searchList.add(new DataValue("italy","Cumulative number of reported cases of SARS","WSARCITA index","PX_LAST"));
		searchList.add(new DataValue("japan","Cumulative number of reported cases of SARS","WSARCJPN index","PX_LAST"));
		searchList.add(new DataValue("korea","Cumulative number of reported cases of SARS","WSARCKOR index","PX_LAST"));
		searchList.add(new DataValue("kuwait","Cumulative number of reported cases of SARS","WSARCKUW index","PX_LAST"));
		searchList.add(new DataValue("macau","Cumulative number of reported cases of SARS","WSARCMAC index","PX_LAST"));
		searchList.add(new DataValue("malaysia","Cumulative number of reported cases of SARS","WSARCMAL index","PX_LAST"));
		searchList.add(new DataValue("mongolia","Cumulative number of reported cases of SARS","WSARCMON index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","Cumulative number of reported cases of SARS","WSARCNZ index","PX_LAST"));
		searchList.add(new DataValue("philippines","Cumulative number of reported cases of SARS","WSARCPHP index","PX_LAST"));
		searchList.add(new DataValue("poland","Cumulative number of reported cases of SARS","WSARCPOL index","PX_LAST"));
		searchList.add(new DataValue("romania","Cumulative number of reported cases of SARS","WSARCROM index","PX_LAST"));
		searchList.add(new DataValue("russia","Cumulative number of reported cases of SARS","WSARCRUS index","PX_LAST"));
		searchList.add(new DataValue("south_africa","Cumulative number of reported cases of SARS","WSARCSA index","PX_LAST"));
		searchList.add(new DataValue("singapore","Cumulative number of reported cases of SARS","WSARCSIN index","PX_LAST"));
		searchList.add(new DataValue("spain","Cumulative number of reported cases of SARS","WSARCSPN index","PX_LAST"));
		searchList.add(new DataValue("sweden","Cumulative number of reported cases of SARS","WSARCSWE index","PX_LAST"));
		searchList.add(new DataValue("switzerland","Cumulative number of reported cases of SARS","WSARCSWI index","PX_LAST"));
		searchList.add(new DataValue("taiwan","Cumulative number of reported cases of SARS","WSARCTAI index","PX_LAST"));
		searchList.add(new DataValue("thailand","Cumulative number of reported cases of SARS","WSARCTHA index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","Cumulative number of reported cases of SARS","WSARCUK index","PX_LAST"));
		searchList.add(new DataValue("vietnam","Cumulative number of reported cases of SARS","WSARCVIE index","PX_LAST"));
		searchList.add(new DataValue("canada","Cumulative number of deaths from SARS","WSARDCAN index","PX_LAST"));
		searchList.add(new DataValue("malaysia","Cumulative number of deaths from SARS","WSARDMAL index","PX_LAST"));
		searchList.add(new DataValue("philippines","Cumulative number of deaths from SARS","WSARDPHP index","PX_LAST"));
		searchList.add(new DataValue("south_africa","Cumulative number of deaths from SARS","WSARDSA index","PX_LAST"));
		searchList.add(new DataValue("singapore","Cumulative number of deaths from SARS","WSARDSIN index","PX_LAST"));
		searchList.add(new DataValue("taiwan","Cumulative number of deaths from SARS","WSARDTAI index","PX_LAST"));
		searchList.add(new DataValue("thailand","Cumulative number of deaths from SARS","WSARDTHA index","PX_LAST"));
		searchList.add(new DataValue("vietnam","Cumulative number of deaths from SARS","WSARDVIE index","PX_LAST"));
		searchList.add(new DataValue("australia","Cumulative number of reported recoveries of SARS","WSARRAUS index","PX_LAST"));
		searchList.add(new DataValue("brazil","Cumulative number of reported recoveries of SARS","WSARRBRA index","PX_LAST"));
		searchList.add(new DataValue("canada","Cumulative number of reported recoveries of SARS","WSARRCAN index","PX_LAST"));
		searchList.add(new DataValue("china","Cumulative number of reported recoveries of SARS","WSARRCHN index","PX_LAST"));
		searchList.add(new DataValue("columbia","Cumulative number of reported recoveries of SARS","WSARRCOM index","PX_LAST"));
		searchList.add(new DataValue("finland","Cumulative number of reported recoveries of SARS","WSARRFIN index","PX_LAST"));
		searchList.add(new DataValue("france","Cumulative number of reported recoveries of SARS","WSARRFRA index","PX_LAST"));
		searchList.add(new DataValue("germany","Cumulative number of reported recoveries of SARS","WSARRGER index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","Cumulative number of reported recoveries of SARS","WSARRHK index","PX_LAST"));
		searchList.add(new DataValue("indonesia","Cumulative number of reported recoveries of SARS","WSARRID index","PX_LAST"));
		searchList.add(new DataValue("india","Cumulative number of reported recoveries of SARS","WSARRIND index","PX_LAST"));
		searchList.add(new DataValue("ireland","Cumulative number of reported recoveries of SARS","WSARRIRE index","PX_LAST"));
		searchList.add(new DataValue("italy","Cumulative number of reported recoveries of SARS","WSARRITA index","PX_LAST"));
		searchList.add(new DataValue("korea","Cumulative number of reported recoveries of SARS","WSARRKOR index","PX_LAST"));
		searchList.add(new DataValue("kuwait","Cumulative number of reported recoveries of SARS","WSARRKUW index","PX_LAST"));
		searchList.add(new DataValue("macau","Cumulative number of reported recoveries of SARS","WSARRMAC index","PX_LAST"));
		searchList.add(new DataValue("malaysia","Cumulative number of reported recoveries of SARS","WSARRMAL index","PX_LAST"));
		searchList.add(new DataValue("mongolia","Cumulative number of reported recoveries of SARS","WSARRMON index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","Cumulative number of reported recoveries of SARS","WSARRNZ index","PX_LAST"));
		searchList.add(new DataValue("philippines","Cumulative number of reported recoveries of SARS","WSARRPHP index","PX_LAST"));
		searchList.add(new DataValue("romania","Cumulative number of reported recoveries of SARS","WSARRROM index","PX_LAST"));
		searchList.add(new DataValue("singapore","Cumulative number of reported recoveries of SARS","WSARRSIN index","PX_LAST"));
		searchList.add(new DataValue("spain","Cumulative number of reported recoveries of SARS","WSARRSPN index","PX_LAST"));
		searchList.add(new DataValue("sweden","Cumulative number of reported recoveries of SARS","WSARRSWE index","PX_LAST"));
		searchList.add(new DataValue("switzerland","Cumulative number of reported recoveries of SARS","WSARRSWI index","PX_LAST"));
		searchList.add(new DataValue("taiwan","Cumulative number of reported recoveries of SARS","WSARRTAI index","PX_LAST"));
		searchList.add(new DataValue("thailand","Cumulative number of reported recoveries of SARS","WSARRTHA index","PX_LAST"));
		searchList.add(new DataValue("world","Cumulative number of reported recoveries of SARS","WSARRTOT index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","Cumulative number of reported recoveries of SARS","WSARRUK index","PX_LAST"));
		searchList.add(new DataValue("united_states","Cumulative number of reported recoveries of SARS","WSARRUS index","PX_LAST"));
		searchList.add(new DataValue("vietnam","Cumulative number of reported recoveries of SARS","WSARRVIE index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","Average anual rainfall (in mm)","UKWSRAIN index","PX_LAST"));
		searchList.add(new DataValue("japan","Average annual temperature","JWNAVTK index","PX_LAST"));
		searchList.add(new DataValue("france","Average temperature across all areas","FRGCTMPA index","PX_LAST"));
		searchList.add(new DataValue("world","Life Expectancy at Birth Total World","LIEXLWLD index","PX_LAST"));
		searchList.add(new DataValue("world","US Census Bureau World Population Estimate","WPOPTOTL index","PX_LAST"));
		searchList.add(new DataValue("algeria","US Census Bureau Population Estimate By Country Algeria","WPOPALGE index","PX_LAST"));
		searchList.add(new DataValue("angola","US Census Bureau Population Estimate By Country Angola","WPOPANGO index","PX_LAST"));
		searchList.add(new DataValue("armenia","US Census Bureau Population Estimate By Country Armenia","WPOPARME index","PX_LAST"));
		searchList.add(new DataValue("azerbaijan","US Census Bureau Population Estimate By Country Azerbaijan","WPOPAZER index","PX_LAST"));
		searchList.add(new DataValue("bahamas","US Census Bureau Population Estimate By Country Bahamas","WPOPBAHA index","PX_LAST"));
		searchList.add(new DataValue("bahrain","US Census Bureau Population Estimate By Country Bahrain","WPOPBAHR index","PX_LAST"));
		searchList.add(new DataValue("barbados","US Census Bureau Population Estimate By Country Barbados","WPOPBARB index","PX_LAST"));
		searchList.add(new DataValue("belarus","US Census Bureau Population Estimate By Country Belarus","WPOPBELA index","PX_LAST"));
		searchList.add(new DataValue("belize","US Census Bureau Population Estimate By Country Belize","WPOPBELI index","PX_LAST"));
		searchList.add(new DataValue("benin","US Census Bureau Population Estimate By Country Benin","WPOPBENI index","PX_LAST"));
		searchList.add(new DataValue("bermuda","US Census Bureau Population Estimate By Country Bermuda","WPOPBERM index","PX_LAST"));
		searchList.add(new DataValue("bolivia","US Census Bureau Population Estimate By Country Bolivia","WPOPBOLI index","PX_LAST"));
		searchList.add(new DataValue("bosnia","US Census Bureau Population Estimate By Country Bosnia","WPOPBOSN index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","US Census Bureau Population Estimate By Country Bulgaria","WPOPBULG index","PX_LAST"));
		searchList.add(new DataValue("burkina_faso","US Census Bureau Population Estimate By Country Burkina Faso","WPOPBURK index","PX_LAST"));
		searchList.add(new DataValue("burundi","US Census Bureau Population Estimate By Country Burundi","WPOPBURU index","PX_LAST"));
		searchList.add(new DataValue("central_african_republic","US Census Bureau Population Estimate By Country Central African Rep","WPOPCAFR index","PX_LAST"));
		searchList.add(new DataValue("cambodia","US Census Bureau Population Estimate By Country Cambodia","WPOPCAMB index","PX_LAST"));
		searchList.add(new DataValue("cape_verde","US Census Bureau Population Estimate By Country Cape Verde","WPOPCAPE index","PX_LAST"));
		searchList.add(new DataValue("cayman_islands","US Census Bureau Population Estimate By Country Cayman Islands","WPOPCAYM index","PX_LAST"));
		searchList.add(new DataValue("democratic_republic_of_congo","US Census Bureau Population Estimate By Country Democratic Republic of Congo","WPOPCOND index","PX_LAST"));
		searchList.add(new DataValue("congo","US Census Bureau Population Estimate By Country Congo","WPOPCONG index","PX_LAST"));
		searchList.add(new DataValue("cook_islands","US Census Bureau Population Estimate By Country Cook Islands","WPOPCOOK index","PX_LAST"));
		searchList.add(new DataValue("cuba","US Census Bureau Population Estimate By Country Cuba","WPOPCUBA index","PX_LAST"));
		searchList.add(new DataValue("cyprus","US Census Bureau Population Estimate By Country Cyprus","WPOPCYPR index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","US Census Bureau Population Estimate By Country Czech Republic","WPOPCZEC index","PX_LAST"));
		searchList.add(new DataValue("dominica","US Census Bureau Population Estimate By Country Dominica","WPOPDOMI index","PX_LAST"));
		searchList.add(new DataValue("dominican_republic","US Census Bureau Population Estimate By Country Dominican Republic","WPOPDREP index","PX_LAST"));
		searchList.add(new DataValue("ecuador","US Census Bureau Population Estimate By Country Ecuador","WPOPECUA index","PX_LAST"));
		searchList.add(new DataValue("el_salvador","US Census Bureau Population Estimate By Country El Salvador","WPOPELSA index","PX_LAST"));
		searchList.add(new DataValue("estonia","US Census Bureau Population Estimate By Country Estonia","WPOPESTO index","PX_LAST"));
		searchList.add(new DataValue("ethiopia","US Census Bureau Population Estimate By Country Ethiopia","WPOPETHI index","PX_LAST"));
		searchList.add(new DataValue("fiji","US Census Bureau Population Estimate By Country Fiji","WPOPFIJI index","PX_LAST"));
		searchList.add(new DataValue("gabon","US Census Bureau Population Estimate By Country Gabon","WPOPGABO index","PX_LAST"));
		searchList.add(new DataValue("gambia","US Census Bureau Population Estimate By Country Gambia","WPOPGAMB index","PX_LAST"));
		searchList.add(new DataValue("georgia","US Census Bureau Population Estimate By Country Georgia","WPOPGEOR index","PX_LAST"));
		searchList.add(new DataValue("ghana","US Census Bureau Population Estimate By Country Ghana","WPOPGHAN index","PX_LAST"));
		searchList.add(new DataValue("grenada","US Census Bureau Population Estimate By Country Grenada","WPOPGREN index","PX_LAST"));
		searchList.add(new DataValue("guam","US Census Bureau Population Estimate By Country Guam","WPOPGUAM index","PX_LAST"));
		searchList.add(new DataValue("guatemala","US Census Bureau Population Estimate By Country Guatemala","WPOPGUAT index","PX_LAST"));
		searchList.add(new DataValue("guyana","US Census Bureau Population Estimate By Country Guyana","WPOPGUYA index","PX_LAST"));
		searchList.add(new DataValue("haiti","US Census Bureau Population Estimate By Country Haiti","WPOPHAIT index","PX_LAST"));
		searchList.add(new DataValue("honduras ","US Census Bureau Population Estimate By Country Honduras","WPOPHOND index","PX_LAST"));
		searchList.add(new DataValue("croatia","US Census Bureau Population Estimate By Country Croatia","WPOPHR index","PX_LAST"));
		searchList.add(new DataValue("iceland","US Census Bureau Population Estimate By Country Iceland","WPOPICEL index","PX_LAST"));
		searchList.add(new DataValue("iran","US Census Bureau Population Estimate By Country Iran","WPOPIRAN index","PX_LAST"));
		searchList.add(new DataValue("iraq","US Census Bureau Population Estimate By Country Iraq","WPOPIRAQ index","PX_LAST"));
		searchList.add(new DataValue("israel","US Census Bureau Population Estimate By Country Israel","WPOPISRA index","PX_LAST"));
		searchList.add(new DataValue("ivory_coast","US Census Bureau Population Estimate By Country Ivory Coast","WPOPIVOR index","PX_LAST"));
		searchList.add(new DataValue("jamaica","US Census Bureau Population Estimate By Country Jamaica","WPOPJAMA index","PX_LAST"));
		searchList.add(new DataValue("jordan","US Census Bureau Population Estimate By Country Jordan","WPOPJORD index","PX_LAST"));
		searchList.add(new DataValue("kazakhstan","US Census Bureau Population Estimate By Country Kazakhstan","WPOPKAZA index","PX_LAST"));
		searchList.add(new DataValue("kuwait","US Census Bureau Population Estimate By Country Kuwait","WPOPKUWA index","PX_LAST"));
		searchList.add(new DataValue("kyrgyzstan","US Census Bureau Population Estimate By Country Kyrgyzstan","WPOPKYRG index","PX_LAST"));
		searchList.add(new DataValue("laos","US Census Bureau Population Estimate By Country Laos","WPOPLAK index","PX_LAST"));
		searchList.add(new DataValue("latvia","US Census Bureau Population Estimate By Country Latvia","WPOPLATV index","PX_LAST"));
		searchList.add(new DataValue("lebanon","US Census Bureau Population Estimate By Country Lebanon","WPOPLEBA index","PX_LAST"));
		searchList.add(new DataValue("libya","US Census Bureau Population Estimate By Country Libya","WPOPLIBY index","PX_LAST"));
		searchList.add(new DataValue("liechtenstein","US Census Bureau Population Estimate By Country Liechtenstein","WPOPLIEC index","PX_LAST"));
		searchList.add(new DataValue("lithuania","US Census Bureau Population Estimate By Country Lithuania","WPOPLITH index","PX_LAST"));
		searchList.add(new DataValue("luxembourg","US Census Bureau Population Estimate By Country Luxembourg","WPOPLUXE index","PX_LAST"));
		searchList.add(new DataValue("macau","US Census Bureau Population Estimate By Country Macao","WPOPMACA index","PX_LAST"));
		searchList.add(new DataValue("macedonia","US Census Bureau Population Estimate By Country Macedonia","WPOPMACE index","PX_LAST"));
		searchList.add(new DataValue("madagascar","US Census Bureau Population Estimate By Country Madagascar","WPOPMADA index","PX_LAST"));
		searchList.add(new DataValue("maldives","US Census Bureau Population Estimate By Country Maldives","WPOPMALD index","PX_LAST"));
		searchList.add(new DataValue("mali","US Census Bureau Population Estimate By Country Mali","WPOPMALI index","PX_LAST"));
		searchList.add(new DataValue("malta","US Census Bureau Population Estimate By Country Malta","WPOPMALT index","PX_LAST"));
		searchList.add(new DataValue("malawi","US Census Bureau Population Estimate By Country Malawi","WPOPMALW index","PX_LAST"));
		searchList.add(new DataValue("martinique","US Census Bureau Population Estimate By Country Martinique","WPOPMART index","PX_LAST"));
		searchList.add(new DataValue("mauritius","US Census Bureau Population Estimate By Country Mauritius","WPOPMAUR index","PX_LAST"));
		searchList.add(new DataValue("moldova","US Census Bureau Population Estimate By Country Moldova","WPOPMOLD index","PX_LAST"));
		searchList.add(new DataValue("monaco","US Census Bureau Population Estimate By Country Monaco","WPOPMONA index","PX_LAST"));
		searchList.add(new DataValue("mangolia","US Census Bureau Population Estimate By Country Mongolia","WPOPMONG index","PX_LAST"));
		searchList.add(new DataValue("montenegro","US Census Bureau Population Estimate By Country Montenegro","WPOPMONT index","PX_LAST"));
		searchList.add(new DataValue("morocco","US Census Bureau Population Estimate By Country Morocco","WPOPMORO index","PX_LAST"));
		searchList.add(new DataValue("mozambique","US Census Bureau Population Estimate By Country Mozambique","WPOPMOZA index","PX_LAST"));
		searchList.add(new DataValue("namibia","US Census Bureau Population Estimate By Country Namibia","WPOPNAMI index","PX_LAST"));
		searchList.add(new DataValue("nepal","US Census Bureau Population Estimate By Country Nepal","WPOPNEPA index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","US Census Bureau Population Estimate By Country New Zealand","WPOPNEWZ index","PX_LAST"));
		searchList.add(new DataValue("nicaragua","US Census Bureau Population Estimate By Country Nicaragua","WPOPNICA index","PX_LAST"));
		searchList.add(new DataValue("niger","US Census Bureau Population Estimate By Country Niger","WPOPNIGR index","PX_LAST"));
		searchList.add(new DataValue("oman","US Census Bureau Population Estimate By Country Oman","WPOPOMAN index","PX_LAST"));
		searchList.add(new DataValue("panama","US Census Bureau Population Estimate By Country Panama","WPOPPANA index","PX_LAST"));
		searchList.add(new DataValue("paraguay","US Census Bureau Population Estimate By Country Paraguay","WPOPPARA index","PX_LAST"));
		searchList.add(new DataValue("puerto_rico","US Census Bureau Population Estimate By Country Puerto Rico","WPOPPUER index","PX_LAST"));
		searchList.add(new DataValue("qatar","US Census Bureau Population Estimate By Country Qatar","WPOPQUAT index","PX_LAST"));
		searchList.add(new DataValue("romania","US Census Bureau Population Estimate By Country Romania","WPOPROMA index","PX_LAST"));
		searchList.add(new DataValue("samoa","US Census Bureau Population Estimate By Country Samoa","WPOPSAMO index","PX_LAST"));
		searchList.add(new DataValue("senegal","US Census Bureau Population Estimate By Country Senegal","WPOPSENE index","PX_LAST"));
		searchList.add(new DataValue("serbia","US Census Bureau Population Estimate By Country Serbia","WPOPSERB index","PX_LAST"));
		searchList.add(new DataValue("seychelles","US Census Bureau Population Estimate By Country Seychelles","WPOPSEYC index","PX_LAST"));
		searchList.add(new DataValue("sierra_leone","US Census Bureau Population Estimate By Country Sierra Leone","WPOPSIER index","PX_LAST"));
		searchList.add(new DataValue("slovakia","US Census Bureau Population Estimate By Country Slovakia","WPOPSLOV index","PX_LAST"));
		searchList.add(new DataValue("st_lucia","US Census Bureau Population Estimate By Country St Lucia","WPOPSLUC index","PX_LAST"));
		searchList.add(new DataValue("slovenia","US Census Bureau Population Estimate By Country Slovenia","WPOPSLVE index","PX_LAST"));
		searchList.add(new DataValue("solomon_islands","US Census Bureau Population Estimate By Country Solomon Islands","WPOPSOLO index","PX_LAST"));
		searchList.add(new DataValue("somalia","US Census Bureau Population Estimate By Country Somalia","WPOPSOMA index","PX_LAST"));
		searchList.add(new DataValue("sudan","US Census Bureau Population Estimate By Country Sudan","WPOPSUDA index","PX_LAST"));
		searchList.add(new DataValue("suriname","US Census Bureau Population Estimate By Country Suriname","WPOPSURI index","PX_LAST"));
		searchList.add(new DataValue("swaziland","US Census Bureau Population Estimate By Country Swaziland","WPOPSWAZ index","PX_LAST"));
		searchList.add(new DataValue("syria","US Census Bureau Population Estimate By Country Syria","WPOPSYRI index","PX_LAST"));
		searchList.add(new DataValue("tajikistan","US Census Bureau Population Estimate By Country Tajikistan","WPOPTAJI index","PX_LAST"));
		searchList.add(new DataValue("tanzania","US Census Bureau Population Estimate By Country Tanzania","WPOPTANZ index","PX_LAST"));
		searchList.add(new DataValue("togo","US Census Bureau Population Estimate By Country Togo","WPOPTOGO index","PX_LAST"));
		searchList.add(new DataValue("tongo","US Census Bureau Population Estimate By Country Tonga","WPOPTONG index","PX_LAST"));
		searchList.add(new DataValue("trinidad_and_tobago","US Census Bureau Population Estimate By Country Trinidad & Tobago","WPOPTRIN index","PX_LAST"));
		searchList.add(new DataValue("turkmenistan","US Census Bureau Population Estimate By Country Turkmenistan","WPOPTRKM index","PX_LAST"));
		searchList.add(new DataValue("united_arab_emirates","US Census Bureau Population Estimate By Country United Arab Emirates","WPOPUAE index","PX_LAST"));
		searchList.add(new DataValue("uganda","US Census Bureau Population Estimate By Country Uganda","WPOPUGAN index","PX_LAST"));
		searchList.add(new DataValue("ukraine","US Census Bureau Population Estimate By Country Ukraine","WPOPUKRA index","PX_LAST"));
		searchList.add(new DataValue("uruguay","US Census Bureau Population Estimate By Country Uruguay","WPOPURUG index","PX_LAST"));
		searchList.add(new DataValue("vanatu","US Census Bureau Population Estimate By Country Vanuatu","WPOPVANU index","PX_LAST"));
		searchList.add(new DataValue("yemen","US Census Bureau Population Estimate By Country Yemen","WPOPYEME index","PX_LAST"));
		searchList.add(new DataValue("zambia","US Census Bureau Population Estimate By Country Zambia","WPOPZAMB index","PX_LAST"));
		searchList.add(new DataValue("zimbabwe","US Census Bureau Population Estimate By Country Zimbabwe","WPOPZIMB index","PX_LAST"));
		searchList.add(new DataValue("united_states","US Census Bureau Birthrate Estimate United States","WPPBUS index","PX_LAST"));
		searchList.add(new DataValue("japan","US Census Bureau Birthrate Estimate Japan","WPPBJAPA index","PX_LAST"));
		searchList.add(new DataValue("russia","US Census Bureau Birthrate Estimate Russia","WPPBRUSS index","PX_LAST"));
		searchList.add(new DataValue("france","US Census Bureau Birthrate Estimate France","WPPBFRAN index","PX_LAST"));
		searchList.add(new DataValue("chile","US Census Bureau Birthrate Estimate Chile","WPPBCHIL index","PX_LAST"));
		searchList.add(new DataValue("india","US Census Bureau Birthrate Estimate India","WPPBINDI index","PX_LAST"));
		searchList.add(new DataValue("south_korea","US Census Bureau Birthrate Estimate South Korea","WPPBSK index","PX_LAST"));
		searchList.add(new DataValue("spain","US Census Bureau Birthrate Estimate Spain","WPPBSPAI index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","US Census Bureau Birthrate Estimate United Kingdom","WPPBUK index","PX_LAST"));
		searchList.add(new DataValue("brazil","US Census Bureau Birthrate Estimate Brazil","WPPBBRAZ index","PX_LAST"));
		searchList.add(new DataValue("canada","US Census Bureau Birthrate Estimate Canada","WPPBCAN index","PX_LAST"));
		searchList.add(new DataValue("australia","US Census Bureau Birthrate Estimate Austria","WPPBAUST index","PX_LAST"));
		searchList.add(new DataValue("greece","US Census Bureau Birthrate Estimate Greece","WPPBGREE index","PX_LAST"));
		searchList.add(new DataValue("south_africa","US Census Bureau Birthrate Estimate South Africa","WPPBSAF index","PX_LAST"));
		searchList.add(new DataValue("china","US Census Bureau Birthrate Estimate China","WPPBCHIN index","PX_LAST"));
		searchList.add(new DataValue("hungary","US Census Bureau Birthrate Estimate Hungary","WPPBHUNG index","PX_LAST"));
		searchList.add(new DataValue("world","US Census Bureau Birthrate Estimate","WPPBISRA index","PX_LAST"));
		searchList.add(new DataValue("mexico","US Census Bureau Birthrate Estimate Mexico","WPPBMEX index","PX_LAST"));
		searchList.add(new DataValue("poland","US Census Bureau Birthrate Estimate Poland","WPPBPOLA index","PX_LAST"));
		searchList.add(new DataValue("belgium","US Census Bureau Birthrate Estimate Belgium","WPPBBELG index","PX_LAST"));
		searchList.add(new DataValue("denmark","US Census Bureau Birthrate Estimate Denmark","WPPBDENM index","PX_LAST"));
		searchList.add(new DataValue("finland","US Census Bureau Birthrate Estimate Finland","WPPBFINL index","PX_LAST"));
		searchList.add(new DataValue("ireland","US Census Bureau Birthrate Estimate Ireland","WPPBIREL index","PX_LAST"));
		searchList.add(new DataValue("luxembourg","US Census Bureau Birthrate Estimate Luxembourg","WPPBLUXE index","PX_LAST"));
		searchList.add(new DataValue("argentina","US Census Bureau Birthrate Estimate Argentina","WPPBARGE index","PX_LAST"));
		searchList.add(new DataValue("australia","US Census Bureau Birthrate Estimate Australia","WPPBAUSL index","PX_LAST"));
		searchList.add(new DataValue("bahrain","US Census Bureau Birthrate Estimate Bahrain","WPPBBAHR index","PX_LAST"));
		searchList.add(new DataValue("barbados","US Census Bureau Birthrate Estimate Barbados","WPPBBARB index","PX_LAST"));
		searchList.add(new DataValue("botswana","US Census Bureau Birthrate Estimate Botswana","WPPBBOTS index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","US Census Bureau Birthrate Estimate Bulgaria","WPPBBULG index","PX_LAST"));
		searchList.add(new DataValue("colombia","US Census Bureau Birthrate Estimate Colombia","WPPBCOLO index","PX_LAST"));
		searchList.add(new DataValue("croatia","US Census Bureau Birthrate Estimate Croatia","WPPBCROA index","PX_LAST"));
		searchList.add(new DataValue("cyprus","US Census Bureau Birthrate Estimate Cyprus","WPPBCYPR index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","US Census Bureau Birthrate Estimate Czech Republic","WPPBCZEC index","PX_LAST"));
		searchList.add(new DataValue("egypt","US Census Bureau Birthrate Estimate Egypt","WPPBEGYP index","PX_LAST"));
		searchList.add(new DataValue("estonia","US Census Bureau Birthrate Estimate Estonia","WPPBESTO index","PX_LAST"));
		searchList.add(new DataValue("germany","US Census Bureau Birthrate Estimate Germany","WPPBGERM index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","US Census Bureau Birthrate Estimate Hong Kong","WPPBHK index","PX_LAST"));
		searchList.add(new DataValue("iceland","US Census Bureau Birthrate Estimate Iceland","WPPBICEL index","PX_LAST"));
		searchList.add(new DataValue("indonesia","US Census Bureau Birthrate Estimat Indonesia","WPPBINDO index","PX_LAST"));
		searchList.add(new DataValue("italy","US Census Bureau Birthrate Estimate Italy","WPPBITAL index","PX_LAST"));
		searchList.add(new DataValue("jamaica","US Census Bureau Birthrate Estimate Jamaica","WPPBJAMA index","PX_LAST"));
		searchList.add(new DataValue("jordan","US Census Bureau Birthrate Estimate Jordan","WPPBJORD index","PX_LAST"));
		searchList.add(new DataValue("kenya","US Census Bureau Birthrate Estimate Kenya","WPPBKENY index","PX_LAST"));
		searchList.add(new DataValue("kuwait","US Census Bureau Birthrate Estimate Kuwait","WPPBKUWA index","PX_LAST"));
		searchList.add(new DataValue("latvia","US Census Bureau Birthrate Estimate Latvia","WPPBLATV index","PX_LAST"));
		searchList.add(new DataValue("lebanon","US Census Bureau Birthrate Estimate Lebanon","WPPBLEBA index","PX_LAST"));
		searchList.add(new DataValue("lithuania","US Census Bureau Birthrate Estimate Lithuania","WPPBLITH index","PX_LAST"));
		searchList.add(new DataValue("malaysia","US Census Bureau Birthrate Estimate Malaysia","WPPBMALA index","PX_LAST"));
		searchList.add(new DataValue("malta","US Census Bureau Birthrate Estimate Malta","WPPBMALT index","PX_LAST"));
		searchList.add(new DataValue("morocco","US Census Bureau Birthrate Estimate Morocco","WPPBMORO index","PX_LAST"));
		searchList.add(new DataValue("netherlands","US Census Bureau Birthrate Estimate Netherlands","WPPBNETH index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","US Census Bureau Birthrate Estimate New Zealand","WPPBNEWZ index","PX_LAST"));
		searchList.add(new DataValue("nigeria","US Census Bureau Birthrate Estimate Nigeria","WPPBNIGE index","PX_LAST"));
		searchList.add(new DataValue("norway","US Census Bureau Birthrate Estimate Norway","WPPBNORW index","PX_LAST"));
		searchList.add(new DataValue("oman","US Census Bureau Birthrate Estimate Oman","WPPBOMAN index","PX_LAST"));
		searchList.add(new DataValue("pakistan","US Census Bureau Birthrate Estimate Pakistan","WPPBPAKI index","PX_LAST"));
		searchList.add(new DataValue("peru","US Census Bureau Birthrate Estimate Peru","WPPBPERU index","PX_LAST"));
		searchList.add(new DataValue("philippines","US Census Bureau Birthrate Estimate Philippines","WPPBPHIL index","PX_LAST"));
		searchList.add(new DataValue("portugal","US Census Bureau Birthrate Estimate Portugal","WPPBPORT index","PX_LAST"));
		searchList.add(new DataValue("switzerland","US Census Bureau Birthrate Estimate Switzerland","WPPBSWIT index","PX_LAST"));
		searchList.add(new DataValue("taiwan","US Census Bureau Birthrate Estimate Taiwan","WPPBTAIW index","PX_LAST"));
		searchList.add(new DataValue("turkey","US Census Bureau Birthrate Estimate Turkey","WPPBTURK index","PX_LAST"));
		searchList.add(new DataValue("venezuela","US Census Bureau Birthrate Estimate Venezuela","WPPBVENE index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","IMF Czech Republic Wages: Monthly Earnings","9356650 index","PX_LAST"));
		searchList.add(new DataValue("slovakia","IMF Slovak Republic Wages: Monthly Earnings","9366650 index","PX_LAST"));
		searchList.add(new DataValue("estonia","IMF Estonia Wages: Monthly Earnings","9396650 index","PX_LAST"));
		searchList.add(new DataValue("hungary","IMF Hungary Wages: Monthly Earnings","9446650 index","PX_LAST"));
		searchList.add(new DataValue("lithuania","IMF Lithuania Wages: Monthly Earnings","9466650 index","PX_LAST"));
		searchList.add(new DataValue("mongolia","IMF Mongolia Wages: Monthly Earnings","9486650 index","PX_LAST"));
		searchList.add(new DataValue("croatia","IMF Croatia Wages: Monthly Earnings","9606650 index","PX_LAST"));
		searchList.add(new DataValue("slovenia","IMF Slovenia Wages: Monthly Earnings","9616650 index","PX_LAST"));
		searchList.add(new DataValue("macedonia","IMF Macedonia Wages: Monthly Earnings","9626650 index","PX_LAST"));
		searchList.add(new DataValue("kazakhstan","IMF Kazakhstan Wages: Monthly Earnings","9166650 index","PX_LAST"));
		searchList.add(new DataValue("israel","IMF Israel Wages: Monthly Earnings","4366650 index","PX_LAST"));
		searchList.add(new DataValue("sri_lanka","IMF Sri Lanka Wages: Monthly Earnings","5246650 index","PX_LAST"));
		searchList.add(new DataValue("fiji","IMF Fiji Wages: Monthly Earnings","8196650 index","PX_LAST"));
		searchList.add(new DataValue("trinidad_and_tobago","IMF Trinidad & Tobago Wages: Monthly Earnings","3696650 index","PX_LAST"));
		searchList.add(new DataValue("belgium","IMF Belgium Wages: Monthly Earnings","1246650 index","PX_LAST"));
		searchList.add(new DataValue("italy","IMF Italy Wages: Hourly Earnings Mfg","1366654 index","PX_LAST"));
		searchList.add(new DataValue("netherlands","IMF Netherlands Wages: Monthly Earnings","1386650 index","PX_LAST"));
		searchList.add(new DataValue("canada","IMF Canada Wages: Hourly Earnings Mfg","1566654 index","PX_LAST"));
		searchList.add(new DataValue("finland","IMF Finland Wages: Hourly Earnings Mfg","1726654 index","PX_LAST"));
		searchList.add(new DataValue("iceland","IMF Iceland Wages: Monthly Earnings","1766650 index","PX_LAST"));
		searchList.add(new DataValue("spain","IMF Spain Wages: Monthly Earnings","1846650 index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","IMF New Zealand Wages: Monthly Earnings","1966650 index","PX_LAST"));
		searchList.add(new DataValue("switzerland","IMF Switzerland Wages: Monthly Earnings","1466650 index","PX_LAST"));
		searchList.add(new DataValue("italy","IMF Italy Wages: Monthly Earnings","1366650 index","PX_LAST"));
		searchList.add(new DataValue("poland","IMF Poland Wages: Monthly Earnings","9646650 index","PX_LAST"));
		searchList.add(new DataValue("romania","IMF Romania Wages: Monthly Earnings","9686650 index","PX_LAST"));
		searchList.add(new DataValue("australia","IMF Austria Wages: Monthly Earnings","1226650 index","PX_LAST"));
		searchList.add(new DataValue("latvia","IMF Latvia Wages: Monthly Earnings","9416650 index","PX_LAST"));
		searchList.add(new DataValue("greece","IMF Greece Wages: Nominal Monthly Earnings","1746650 index","PX_LAST"));
		searchList.add(new DataValue("sweden","IMF Sweden Wages: Monthly Earnings","1446650 index","PX_LAST"));
		searchList.add(new DataValue("australia","IMF Australia Wages: Monthly Earnings","1936650 index","PX_LAST"));
		searchList.add(new DataValue("chile","IMF Chile Wages: Monthly Earnings","2286650 index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","IMF China Hong Kong Wages: Monthly Earnings","5326650 index","PX_LAST"));
		searchList.add(new DataValue("mexico","IMF Mexico Wages: Monthly Earnings","2736650 index","PX_LAST"));
		searchList.add(new DataValue("france","IMF France Wages: Monthly Earnings","1326650 index","PX_LAST"));
		searchList.add(new DataValue("canada","US Census Bureau Birthrate Estimate Canada","WPPBCAN index","PX_LAST"));
		searchList.add(new DataValue("norway","IMF Norway Wages: Monthly Earnings","1426650 index","PX_LAST"));
		searchList.add(new DataValue("aruba","Life Expectancy at Birth Total Aruba","LIEXLABW index","PX_LAST"));
		searchList.add(new DataValue("afghanistan","Life Expectancy at Birth Total Afghanistan","LIEXLAFG index","PX_LAST"));
		searchList.add(new DataValue("angola","Life Expectancy at Birth Total Angola","LIEXLAGO index","PX_LAST"));
		searchList.add(new DataValue("albania","Life Expectancy at Birth Total Albania","LIEXLALB index","PX_LAST"));
		searchList.add(new DataValue("andorra","Life Expectancy at Birth Total Andorra","LIEXLAND index","PX_LAST"));
		searchList.add(new DataValue("united_arab_emirates","Life Expectancy at Birth Total United Arab Emirates","LIEXLARE index","PX_LAST"));
		searchList.add(new DataValue("argentina","Life Expectancy at Birth Total Argentina","LIEXLARG index","PX_LAST"));
		searchList.add(new DataValue("armenia","Life Expectancy at Birth Total Armenia","LIEXLARM index","PX_LAST"));
		searchList.add(new DataValue("american_samoa","Life Expectancy at Birth Total American Samoa","LIEXLASM index","PX_LAST"));
		searchList.add(new DataValue("antigua_and_barbuda","Life Expectancy at Birth Total Antigua And Barbuda","LIEXLATG index","PX_LAST"));
		searchList.add(new DataValue("australia","Life Expectancy at Birth Total Australia","LIEXLAUS index","PX_LAST"));
		searchList.add(new DataValue("austria","Life Expectancy at Birth Total Austria","LIEXLAUT index","PX_LAST"));
		searchList.add(new DataValue("azerbaijan","Life Expectancy at Birth Total Azerbaijan","LIEXLAZE index","PX_LAST"));
		searchList.add(new DataValue("burundi","Life Expectancy at Birth Total Burundi","LIEXLBDI index","PX_LAST"));
		searchList.add(new DataValue("belgium","Life Expectancy at Birth Total Belgium","LIEXLBEL index","PX_LAST"));
		searchList.add(new DataValue("benin","Life Expectancy at Birth Total Benin","LIEXLBEN index","PX_LAST"));
		searchList.add(new DataValue("burkina_faso","Life Expectancy at Birth Total Burkina Faso","LIEXLBFA index","PX_LAST"));
		searchList.add(new DataValue("bangladesh","Life Expectancy at Birth Total Bangladesh","LIEXLBGD index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","Life Expectancy at Birth Total Bulgaria","LIEXLBGR index","PX_LAST"));
		searchList.add(new DataValue("bahrain","Life Expectancy at Birth Total Bahrain","LIEXLBHR index","PX_LAST"));
		searchList.add(new DataValue("bahamas","Life Expectancy at Birth Total Bahamas The","LIEXLBHS index","PX_LAST"));
		searchList.add(new DataValue("bosnia","Life Expectancy at Birth Total Bosnia And Herzegovina","LIEXLBIH index","PX_LAST"));
		searchList.add(new DataValue("belarus","Life Expectancy at Birth Total Belarus","LIEXLBLR index","PX_LAST"));
		searchList.add(new DataValue("belize","Life Expectancy at Birth Total Belize","LIEXLBLZ index","PX_LAST"));
		searchList.add(new DataValue("bermuda","Life Expectancy at Birth Total Bermuda","LIEXLBMU index","PX_LAST"));
		searchList.add(new DataValue("bolivia","Life Expectancy at Birth Total Bolivia","LIEXLBOL index","PX_LAST"));
		searchList.add(new DataValue("brazil","Life Expectancy at Birth Total Brazil","LIEXLBRA index","PX_LAST"));
		searchList.add(new DataValue("barbados","Life Expectancy at Birth Total Barbados","LIEXLBRB index","PX_LAST"));
		searchList.add(new DataValue("bhutan","Life Expectancy at Birth Total Bhutan","LIEXLBTN index","PX_LAST"));
		searchList.add(new DataValue("botswana","Life Expectancy at Birth Total Botswana","LIEXLBWA index","PX_LAST"));
		searchList.add(new DataValue("central_african_republic","Life Expectancy at Birth Total Central African Republic","LIEXLCAF index","PX_LAST"));
		searchList.add(new DataValue("canada","Life Expectancy at Birth Total Canada","LIEXLCAN index","PX_LAST"));
		searchList.add(new DataValue("switzerland","Life Expectancy at Birth Total Switzerland","LIEXLCHE index","PX_LAST"));
		searchList.add(new DataValue("channel_islands","Life Expectancy at Birth Total Channel Islands","LIEXLCHI index","PX_LAST"));
		searchList.add(new DataValue("chile","Life Expectancy at Birth Total Chile","LIEXLCHL index","PX_LAST"));
		searchList.add(new DataValue("china","Life Expectancy at Birth Total China","LIEXLCHN index","PX_LAST"));
		searchList.add(new DataValue("cote_divoire","Life Expectancy at Birth Total Cote Divoire","LIEXLCIV index","PX_LAST"));
		searchList.add(new DataValue("cameroon","Life Expectancy at Birth Total Cameroon","LIEXLCMR index","PX_LAST"));
		searchList.add(new DataValue("congo_dem_rep","Life Expectancy at Birth Total Congo Dem Rep","LIEXLCOD index","PX_LAST"));
		searchList.add(new DataValue("congo_rep","Life Expectancy at Birth Total Congo Rep","LIEXLCOG index","PX_LAST"));
		searchList.add(new DataValue("colombia","Life Expectancy at Birth Total Colombia","LIEXLCOL index","PX_LAST"));
		searchList.add(new DataValue("comoros","Life Expectancy at Birth Total Comoros","LIEXLCOM index","PX_LAST"));
		searchList.add(new DataValue("cape_verde","Life Expectancy at Birth Total Cape Verde","LIEXLCPV index","PX_LAST"));
		searchList.add(new DataValue("costa_rica","Life Expectancy at Birth Total Costa Rica","LIEXLCRI index","PX_LAST"));
		searchList.add(new DataValue("cuba","Life Expectancy at Birth Total Cuba","LIEXLCUB index","PX_LAST"));
		searchList.add(new DataValue("curacao","Life Expectancy at Birth Total Curacao","LIEXLCUW index","PX_LAST"));
		searchList.add(new DataValue("cayman_islands","Life Expectancy at Birth Total Cayman Islands","LIEXLCYM index","PX_LAST"));
		searchList.add(new DataValue("cyprus","Life Expectancy at Birth Total Cyprus","LIEXLCYP index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","Life Expectancy at Birth Total Czech Republic","LIEXLCZE index","PX_LAST"));
		searchList.add(new DataValue("germany","Life Expectancy at Birth Total Germany","LIEXLDEU index","PX_LAST"));
		searchList.add(new DataValue("djibouti","Life Expectancy at Birth Total Djibouti","LIEXLDJI index","PX_LAST"));
		searchList.add(new DataValue("dominica","Life Expectancy at Birth Total Dominica","LIEXLDMA index","PX_LAST"));
		searchList.add(new DataValue("denmark","Life Expectancy at Birth Total Denmark","LIEXLDNK index","PX_LAST"));
		searchList.add(new DataValue("deominican_republic","Life Expectancy at Birth Total Dominican Republic","LIEXLDOM index","PX_LAST"));
		searchList.add(new DataValue("algeria","Life Expectancy at Birth Total Algeria","LIEXLDZA index","PX_LAST"));
		searchList.add(new DataValue("east_asia_&_developing_only","Life Expectancy at Birth Total East Asia & Pacific Developing Only","LIEXLEAP index","PX_LAST"));
		searchList.add(new DataValue("east_asia_&_pacific_all_income_levels","Life Expectancy at Birth Total East Asia & Pacific All Income Levels","LIEXLEAS index","PX_LAST"));
		searchList.add(new DataValue("europe_&_central_asia_developing_only","Life Expectancy at Birth Total Europe & Central Asia Developing Only","LIEXLECA index","PX_LAST"));
		searchList.add(new DataValue("europe_&_central_asia_all_income_levels","Life Expectancy at Birth Total Europe & Central Asia All Income Levels","LIEXLECS index","PX_LAST"));
		searchList.add(new DataValue("ecuador","Life Expectancy at Birth Total Ecuador","LIEXLECU index","PX_LAST"));
		searchList.add(new DataValue("egypt_arab_rep","Life Expectancy at Birth Total Egypt Arab Rep","LIEXLEGY index","PX_LAST"));
		searchList.add(new DataValue("euro_area","Life Expectancy at Birth Total Euro Area","LIEXLEMU index","PX_LAST"));
		searchList.add(new DataValue("eritrea","Life Expectancy at Birth Total Eritrea","LIEXLERI index","PX_LAST"));
		searchList.add(new DataValue("spain","Life Expectancy at Birth Total Spain","LIEXLESP index","PX_LAST"));
		searchList.add(new DataValue("estonia","Life Expectancy at Birth Total Estonia","LIEXLEST index","PX_LAST"));
		searchList.add(new DataValue("ethiopia","Life Expectancy at Birth Total Ethiopia","LIEXLETH index","PX_LAST"));
		searchList.add(new DataValue("finland","Life Expectancy at Birth Total Finland","LIEXLFIN index","PX_LAST"));
		searchList.add(new DataValue("fiji","Life Expectancy at Birth Total Fiji","LIEXLFJI index","PX_LAST"));
		searchList.add(new DataValue("faeroe_islands","Life Expectancy at Birth Total Faeroe Islands","LIEXLFRO index","PX_LAST"));
		searchList.add(new DataValue("micronesia_fed_sts","Life Expectancy at Birth Total Micronesia Fed Sts","LIEXLFSM index","PX_LAST"));
		searchList.add(new DataValue("gabon","Life Expectancy at Birth Total Gabon","LIEXLGAB index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","Life Expectancy at Birth Total United Kingdom","LIEXLGBR index","PX_LAST"));
		searchList.add(new DataValue("georgia","Life Expectancy at Birth Total Georgia","LIEXLGEO index","PX_LAST"));
		searchList.add(new DataValue("ghana","Life Expectancy at Birth Total Ghana","LIEXLGHA index","PX_LAST"));
		searchList.add(new DataValue("gibraltar","Life Expectancy at Birth Total Gibraltar","LIEXLGIB index","PX_LAST"));
		searchList.add(new DataValue("guinea","Life Expectancy at Birth Total Guinea","LIEXLGIN index","PX_LAST"));
		searchList.add(new DataValue("gambia","Life Expectancy at Birth Total Gambia The","LIEXLGMB index","PX_LAST"));
		searchList.add(new DataValue("guineabissau","Life Expectancy at Birth Total Guineabissau","LIEXLGNB index","PX_LAST"));
		searchList.add(new DataValue("equatorial_guinea","Life Expectancy at Birth Total Equatorial Guinea","LIEXLGNQ index","PX_LAST"));
		searchList.add(new DataValue("greece","Life Expectancy at Birth Total Greece","LIEXLGRC index","PX_LAST"));
		searchList.add(new DataValue("grenada","Life Expectancy at Birth Total Grenada","LIEXLGRD index","PX_LAST"));
		searchList.add(new DataValue("greenland","Life Expectancy at Birth Total Greenland","LIEXLGRL index","PX_LAST"));
		searchList.add(new DataValue("guatemala","Life Expectancy at Birth Total Guatemala","LIEXLGTM index","PX_LAST"));
		searchList.add(new DataValue("guam","Life Expectancy at Birth Total Guam","LIEXLGUM index","PX_LAST"));
		searchList.add(new DataValue("guyana","Life Expectancy at Birth Total Guyana","LIEXLGUY index","PX_LAST"));
		searchList.add(new DataValue("high_income","Life Expectancy at Birth Total High Income","LIEXLHIC index","PX_LAST"));
		searchList.add(new DataValue("hong_kong_sar_china","Life Expectancy at Birth Total Hong Kong SAR China","LIEXLHKG index","PX_LAST"));
		searchList.add(new DataValue("honduras","Life Expectancy at Birth Total Honduras","LIEXLHND index","PX_LAST"));
		searchList.add(new DataValue("croatia","Life Expectancy at Birth Total Croatia","LIEXLHRV index","PX_LAST"));
		searchList.add(new DataValue("haiti","Life Expectancy at Birth Total Haiti","LIEXLHTI index","PX_LAST"));
		searchList.add(new DataValue("hungary","Life Expectancy at Birth Total Hungary","LIEXLHUN index","PX_LAST"));
		searchList.add(new DataValue("indonesia","Life Expectancy at Birth Total Indonesia","LIEXLIDN index","PX_LAST"));
		searchList.add(new DataValue("isle_of_man","Life Expectancy at Birth Total Isle Of Man","LIEXLIMN index","PX_LAST"));
		searchList.add(new DataValue("india","Life Expectancy at Birth Total India","LIEXLIND index","PX_LAST"));
		searchList.add(new DataValue("ireland","Life Expectancy at Birth Total Ireland","LIEXLIRL index","PX_LAST"));
		searchList.add(new DataValue("iran_islamic_rep","Life Expectancy at Birth Total Iran Islamic Rep","LIEXLIRN index","PX_LAST"));
		searchList.add(new DataValue("iraq","Life Expectancy at Birth Total Iraq","LIEXLIRQ index","PX_LAST"));
		searchList.add(new DataValue("iceland","Life Expectancy at Birth Total Iceland","LIEXLISL index","PX_LAST"));
		searchList.add(new DataValue("jamaica","Life Expectancy at Birth Total Jamaica","LIEXLJAM index","PX_LAST"));
		searchList.add(new DataValue("jordan","Life Expectancy at Birth Total Jordan","LIEXLJOR index","PX_LAST"));
		searchList.add(new DataValue("kazakhstan","Life Expectancy at Birth Total Kazakhstan","LIEXLKAZ index","PX_LAST"));
		searchList.add(new DataValue("kenya","Life Expectancy at Birth Total Kenya","LIEXLKEN index","PX_LAST"));
		searchList.add(new DataValue("kyrgyz_republic","Life Expectancy at Birth Total Kyrgyz Republic","LIEXLKGZ index","PX_LAST"));
		searchList.add(new DataValue("cambodia","Life Expectancy at Birth Total Cambodia","LIEXLKHM index","PX_LAST"));
		searchList.add(new DataValue("kiribati","Life Expectancy at Birth Total Kiribati","LIEXLKIR index","PX_LAST"));
		searchList.add(new DataValue("st_kitts_and_nevis","Life Expectancy at Birth Total St Kitts And Nevis","LIEXLKNA index","PX_LAST"));
		searchList.add(new DataValue("korea_rep","Life Expectancy at Birth Total Korea Rep","LIEXLKOR index","PX_LAST"));
		searchList.add(new DataValue("kosovo","Life Expectancy at Birth Total Kosovo","LIEXLKSV index","PX_LAST"));
		searchList.add(new DataValue("kuwait","Life Expectancy at Birth Total Kuwait","LIEXLKWT index","PX_LAST"));
		searchList.add(new DataValue("latin_america_&_caribbean_developing_only","Life Expectancy at Birth Total Latin America & Caribbean Developing Only","LIEXLLAC index","PX_LAST"));
		searchList.add(new DataValue("lao_pdr","Life Expectancy at Birth Total Lao Pdr","LIEXLLAO index","PX_LAST"));
		searchList.add(new DataValue("lebanon","Life Expectancy at Birth Total Lebanon","LIEXLLBN index","PX_LAST"));
		searchList.add(new DataValue("liberia","Life Expectancy at Birth Total Liberia","LIEXLLBR index","PX_LAST"));
		searchList.add(new DataValue("libya","Life Expectancy at Birth Total Libya","LIEXLLBY index","PX_LAST"));
		searchList.add(new DataValue("st_lucia","Life Expectancy at Birth Total St Lucia","LIEXLLCA index","PX_LAST"));
		searchList.add(new DataValue("latin_america_&_caribbean_all_income_levels","Life Expectancy at Birth Total Latin America & Caribbean All Income Levels","LIEXLLCN index","PX_LAST"));
		searchList.add(new DataValue("least_developed_countries_un_classification","Life Expectancy at Birth Total Least Developed Countries UN Classification","LIEXLLDC index","PX_LAST"));
		searchList.add(new DataValue("low_income","Life Expectancy at Birth Total Low Income","LIEXLLIC index","PX_LAST"));
		searchList.add(new DataValue("liechtenstein","Life Expectancy at Birth Total Liechtenstein","LIEXLLIE index","PX_LAST"));
		searchList.add(new DataValue("sri_lanka","Life Expectancy at Birth Total Sri Lanka","LIEXLLKA index","PX_LAST"));
		searchList.add(new DataValue("lower_middle_income","Life Expectancy at Birth Total Lower Middle Income","LIEXLLMC index","PX_LAST"));
		searchList.add(new DataValue("low_&_middle_income","Life Expectancy at Birth Total Low & Middle Income","LIEXLLMY index","PX_LAST"));
		searchList.add(new DataValue("lesotho","Life Expectancy at Birth Total Lesotho","LIEXLLSO index","PX_LAST"));
		searchList.add(new DataValue("lithuania","Life Expectancy at Birth Total Lithuania","LIEXLLTU index","PX_LAST"));
		searchList.add(new DataValue("luxembourg","Life Expectancy at Birth Total Luxembourg","LIEXLLUX index","PX_LAST"));
		searchList.add(new DataValue("latvia","Life Expectancy at Birth Total Latvia","LIEXLLVA index","PX_LAST"));
		searchList.add(new DataValue("macao_sar_china","Life Expectancy at Birth Total Macao SAR China","LIEXLMAC index","PX_LAST"));
		searchList.add(new DataValue("st_martin_french_part","Life Expectancy at Birth Total St Martin French Part","LIEXLMAF index","PX_LAST"));
		searchList.add(new DataValue("morocco","Life Expectancy at Birth Total Morocco","LIEXLMAR index","PX_LAST"));
		searchList.add(new DataValue("monaco","Life Expectancy at Birth Total Monaco","LIEXLMCO index","PX_LAST"));
		searchList.add(new DataValue("moldova","Life Expectancy at Birth Total Moldova","LIEXLMDA index","PX_LAST"));
		searchList.add(new DataValue("madagascar","Life Expectancy at Birth Total Madagascar","LIEXLMDG index","PX_LAST"));
		searchList.add(new DataValue("maldives","Life Expectancy at Birth Total Maldives","LIEXLMDV index","PX_LAST"));
		searchList.add(new DataValue("middle_east_&_north_africa_all_income_levels","Life Expectancy at Birth Total Middle East & North Africa All Income Levels","LIEXLMEA index","PX_LAST"));
		searchList.add(new DataValue("mexico","Life Expectancy at Birth Total Mexico","LIEXLMEX index","PX_LAST"));
		searchList.add(new DataValue("marshall_islands","Life Expectancy at Birth Total Marshall Islands","LIEXLMHL index","PX_LAST"));
		searchList.add(new DataValue("middle_income","Life Expectancy at Birth Total Middle Income","LIEXLMIC index","PX_LAST"));
		searchList.add(new DataValue("macedonia_fyr","Life Expectancy at Birth Total Macedonia FYR","LIEXLMKD index","PX_LAST"));
		searchList.add(new DataValue("mali","Life Expectancy at Birth Total Mali","LIEXLMLI index","PX_LAST"));
		searchList.add(new DataValue("malta","Life Expectancy at Birth Total Malta","LIEXLMLT index","PX_LAST"));
		searchList.add(new DataValue("myanmar","Life Expectancy at Birth Total Myanmar","LIEXLMMR index","PX_LAST"));
		searchList.add(new DataValue("middle_east_&_north_africa_developing_only","Life Expectancy at Birth Total Middle East & North Africa Developing Only","LIEXLMNA index","PX_LAST"));
		searchList.add(new DataValue("montenegro","Life Expectancy at Birth Total Montenegro","LIEXLMNE index","PX_LAST"));
		searchList.add(new DataValue("mongolia","Life Expectancy at Birth Total Mongolia","LIEXLMNG index","PX_LAST"));
		searchList.add(new DataValue("northern mariana islands","Life Expectancy at Birth Total Northern Mariana Islands","LIEXLMNP index","PX_LAST"));
		searchList.add(new DataValue("mozambique","Life Expectancy at Birth Total Mozambique","LIEXLMOZ index","PX_LAST"));
		searchList.add(new DataValue("mauritania","Life Expectancy at Birth Total Mauritania","LIEXLMRT index","PX_LAST"));
		searchList.add(new DataValue("mauritius","Life Expectancy at Birth Total Mauritius","LIEXLMUS index","PX_LAST"));
		searchList.add(new DataValue("malawi","Life Expectancy at Birth Total Malawi","LIEXLMWI index","PX_LAST"));
		searchList.add(new DataValue("malaysia","Life Expectancy at Birth Total Malaysia","LIEXLMYS index","PX_LAST"));
		searchList.add(new DataValue("mayotte","Life Expectancy at Birth Total Mayotte","LIEXLMYT index","PX_LAST"));
		searchList.add(new DataValue("north_america","Life Expectancy at Birth Total North America","LIEXLNAC index","PX_LAST"));
		searchList.add(new DataValue("namibia","Life Expectancy at Birth Total Namibia","LIEXLNAM index","PX_LAST"));
		searchList.add(new DataValue("new_caledonia","Life Expectancy at Birth Total New Caledonia","LIEXLNCL index","PX_LAST"));
		searchList.add(new DataValue("niger","Life Expectancy at Birth Total Niger","LIEXLNER index","PX_LAST"));
		searchList.add(new DataValue("nigeria","Life Expectancy at Birth Total Nigeria","LIEXLNGA index","PX_LAST"));
		searchList.add(new DataValue("nicaragua","Life Expectancy at Birth Total Nicaragua","LIEXLNIC index","PX_LAST"));
		searchList.add(new DataValue("netherlands","Life Expectancy at Birth Total Netherlands","LIEXLNLD index","PX_LAST"));
		searchList.add(new DataValue("high_income_nonoecd","Life Expectancy at Birth Total High Income NonOECD","LIEXLNOC index","PX_LAST"));
		searchList.add(new DataValue("norway","Life Expectancy at Birth Total Norway","LIEXLNOR index","PX_LAST"));
		searchList.add(new DataValue("nepal","Life Expectancy at Birth Total Nepal","LIEXLNPL index","PX_LAST"));
		searchList.add(new DataValue("new_zealand","Life Expectancy at Birth Total New Zealand","LIEXLNZL index","PX_LAST"));
		searchList.add(new DataValue("high_income_oecd","Life Expectancy at Birth Total High Income OECD","LIEXLOEC index","PX_LAST"));
		searchList.add(new DataValue("oecd_members","Life Expectancy at Birth Total OECD Members","LIEXLOED index","PX_LAST"));
		searchList.add(new DataValue("oman","Life Expectancy at Birth Total Oman","LIEXLOMN index","PX_LAST"));
		searchList.add(new DataValue("pakistan","Life Expectancy at Birth Total Pakistan","LIEXLPAK index","PX_LAST"));
		searchList.add(new DataValue("panama","Life Expectancy at Birth Total Panama","LIEXLPAN index","PX_LAST"));
		searchList.add(new DataValue("peru","Life Expectancy at Birth Total Peru","LIEXLPER index","PX_LAST"));
		searchList.add(new DataValue("philippines","Life Expectancy at Birth Total Philippines","LIEXLPHL index","PX_LAST"));
		searchList.add(new DataValue("palau","Life Expectancy at Birth Total Palau","LIEXLPLW index","PX_LAST"));
		searchList.add(new DataValue("papua_new_guinea","Life Expectancy at Birth Total Papua New Guinea","LIEXLPNG index","PX_LAST"));
		searchList.add(new DataValue("poland","Life Expectancy at Birth Total Poland","LIEXLPOL index","PX_LAST"));
		searchList.add(new DataValue("puerto_rico","Life Expectancy at Birth Total Puerto Rico","LIEXLPRI index","PX_LAST"));
		searchList.add(new DataValue("korea_dem_rep","Life Expectancy at Birth Total Korea Dem Rep","LIEXLPRK index","PX_LAST"));
		searchList.add(new DataValue("portugal","Life Expectancy at Birth Total Portugal","LIEXLPRT index","PX_LAST"));
		searchList.add(new DataValue("paraguay","Life Expectancy at Birth Total Paraguay","LIEXLPRY index","PX_LAST"));
		searchList.add(new DataValue("west_bank_and_gaza","Life Expectancy at Birth Total West Bank And Gaza","LIEXLPSE index","PX_LAST"));
		searchList.add(new DataValue("french_polynesia","Life Expectancy at Birth Total French Polynesia","LIEXLPYF index","PX_LAST"));
		searchList.add(new DataValue("qatar","Life Expectancy at Birth Total Qatar","LIEXLQAT index","PX_LAST"));
		searchList.add(new DataValue("romania","Life Expectancy at Birth Total Romania","LIEXLROU index","PX_LAST"));
		searchList.add(new DataValue("russian_federation","Life Expectancy at Birth Total Russian Federation","LIEXLRUS index","PX_LAST"));
		searchList.add(new DataValue("rwanda","Life Expectancy at Birth Total Rwanda","LIEXLRWA index","PX_LAST"));
		searchList.add(new DataValue("south_asia","Life Expectancy at Birth Total South Asia","LIEXLSAS index","PX_LAST"));
		searchList.add(new DataValue("saudi_arabia","Life Expectancy at Birth Total Saudi Arabia","LIEXLSAU index","PX_LAST"));
		searchList.add(new DataValue("sudan","Life Expectancy at Birth Total Sudan","LIEXLSDN index","PX_LAST"));
		searchList.add(new DataValue("senegal","Life Expectancy at Birth Total Senegal","LIEXLSEN index","PX_LAST"));
		searchList.add(new DataValue("singapore","Life Expectancy at Birth Total Singapore","LIEXLSGP index","PX_LAST"));
		searchList.add(new DataValue("solomon_islands","Life Expectancy at Birth Total Solomon Islands","LIEXLSLB index","PX_LAST"));
		searchList.add(new DataValue("sierra_leone","Life Expectancy at Birth Total Sierra Leone","LIEXLSLE index","PX_LAST"));
		searchList.add(new DataValue("el_salvador","Life Expectancy at Birth Total El Salvador","LIEXLSLV index","PX_LAST"));
		searchList.add(new DataValue("san_marino","Life Expectancy at Birth Total San Marino","LIEXLSMR index","PX_LAST"));
		searchList.add(new DataValue("somalia","Life Expectancy at Birth Total Somalia","LIEXLSOM index","PX_LAST"));
		searchList.add(new DataValue("serbia","Life Expectancy at Birth Total Serbia","LIEXLSRB index","PX_LAST"));
		searchList.add(new DataValue("subsaharan_africa_developing_only","Life Expectancy at Birth Total Subsaharan Africa Developing Only","LIEXLSSA index","PX_LAST"));
		searchList.add(new DataValue("south_sudan","Life Expectancy at Birth Total South Sudan","LIEXLSSD index","PX_LAST"));
		searchList.add(new DataValue("subsaharan_africa_all_income_levels","Life Expectancy at Birth Total Subsaharan Africa All Income Levels","LIEXLSSF index","PX_LAST"));
		searchList.add(new DataValue("sao_tome_and_principe","Life Expectancy at Birth Total Sao Tome And Principe","LIEXLSTP index","PX_LAST"));
		searchList.add(new DataValue("suriname","Life Expectancy at Birth Total Suriname","LIEXLSUR index","PX_LAST"));
		searchList.add(new DataValue("slovak_republic","Life Expectancy at Birth Total Slovak Republic","LIEXLSVK index","PX_LAST"));
		searchList.add(new DataValue("slovenia","Life Expectancy at Birth Total Slovenia","LIEXLSVN index","PX_LAST"));
		searchList.add(new DataValue("sweden","Life Expectancy at Birth Total Sweden","LIEXLSWE index","PX_LAST"));
		searchList.add(new DataValue("swaziland","Life Expectancy at Birth Total Swaziland","LIEXLSWZ index","PX_LAST"));
		searchList.add(new DataValue("sint_maarten_dutch_part","Life Expectancy at Birth Total Sint Maarten Dutch Part","LIEXLSXM index","PX_LAST"));
		searchList.add(new DataValue("seychelles","Life Expectancy at Birth Total Seychelles","LIEXLSYC index","PX_LAST"));
		searchList.add(new DataValue("syrian_arab_republic","Life Expectancy at Birth Total Syrian Arab Republic","LIEXLSYR index","PX_LAST"));
		searchList.add(new DataValue("turks_and_caicos_islands","Life Expectancy at Birth Total Turks And Caicos Islands","LIEXLTCA index","PX_LAST"));
		searchList.add(new DataValue("chad","Life Expectancy at Birth Total Chad","LIEXLTCD index","PX_LAST"));
		searchList.add(new DataValue("togo","Life Expectancy at Birth Total Togo","LIEXLTGO index","PX_LAST"));
		searchList.add(new DataValue("thailand","Life Expectancy at Birth Total Thailand","LIEXLTHA index","PX_LAST"));
		searchList.add(new DataValue("tajikistan","Life Expectancy at Birth Total Tajikistan","LIEXLTJK index","PX_LAST"));
		searchList.add(new DataValue("turkmenistan","Life Expectancy at Birth Total Turkmenistan","LIEXLTKM index","PX_LAST"));
		searchList.add(new DataValue("timorleste","Life Expectancy at Birth Total Timorleste","LIEXLTLS index","PX_LAST"));
		searchList.add(new DataValue("tonga","Life Expectancy at Birth Total Tonga","LIEXLTON index","PX_LAST"));
		searchList.add(new DataValue("trinidad_and_tobago","Life Expectancy at Birth Total Trinidad And Tobago","LIEXLTTO index","PX_LAST"));
		searchList.add(new DataValue("tunisia","Life Expectancy at Birth Total Tunisia","LIEXLTUN index","PX_LAST"));
		searchList.add(new DataValue("turkey","Life Expectancy at Birth Total Turkey","LIEXLTUR index","PX_LAST"));
		searchList.add(new DataValue("tuvalu","Life Expectancy at Birth Total Tuvalu","LIEXLTUV index","PX_LAST"));
		searchList.add(new DataValue("tanzania","Life Expectancy at Birth Total Tanzania","LIEXLTZA index","PX_LAST"));
		searchList.add(new DataValue("uganda","Life Expectancy at Birth Total Uganda","LIEXLUGA index","PX_LAST"));
		searchList.add(new DataValue("ukraine","Life Expectancy at Birth Total Ukraine","LIEXLUKR index","PX_LAST"));
		searchList.add(new DataValue("upper_middle_income","Life Expectancy at Birth Total Upper Middle Income","LIEXLUMC index","PX_LAST"));
		searchList.add(new DataValue("uruguay","Life Expectancy at Birth Total Uruguay","LIEXLURY index","PX_LAST"));
		searchList.add(new DataValue("uzbekistan","Life Expectancy at Birth Total Uzbekistan","LIEXLUZB index","PX_LAST"));
		searchList.add(new DataValue("st_vincent_and_the_grenadines","Life Expectancy at Birth Total St Vincent And The Grenadines","LIEXLVCT index","PX_LAST"));
		searchList.add(new DataValue("venezuela_rb","Life Expectancy at Birth Total Venezuela Rb","LIEXLVEN index","PX_LAST"));
		searchList.add(new DataValue("virgin_islands_us","Life Expectancy at Birth Total Virgin Islands Us","LIEXLVIR index","PX_LAST"));
		searchList.add(new DataValue("vietnam","Life Expectancy at Birth Total Vietnam","LIEXLVNM index","PX_LAST"));
		searchList.add(new DataValue("vanuatu","Life Expectancy at Birth Total Vanuatu","LIEXLVUT index","PX_LAST"));
		searchList.add(new DataValue("samoa","Life Expectancy at Birth Total Samoa","LIEXLWSM index","PX_LAST"));
		searchList.add(new DataValue("yemen_rep","Life Expectancy at Birth Total Yemen Rep","LIEXLYEM index","PX_LAST"));
		searchList.add(new DataValue("south_africa","Life Expectancy at Birth Total South Africa","LIEXLZAF index","PX_LAST"));
		searchList.add(new DataValue("zambia","Life Expectancy at Birth Total Zambia","LIEXLZMB index","PX_LAST"));
		searchList.add(new DataValue("zimbabwe","Life Expectancy at Birth Total Zimbabwe","LIEXLZWE index","PX_LAST"));
		searchList.add(new DataValue("hungary","Mortality Rate Infant per 1000 Live Births Hungary","MRTRMHUN index","PX_LAST"));
		searchList.add(new DataValue("thailand","Mortality Rate Infant per 1000 Live Births Thailand","MRTRMTHA index","PX_LAST"));
		searchList.add(new DataValue("china","Mortality Rate Infant per 1000 Live Births China","MRTRMCHN index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","Mortality Rate Infant per 1000 Live Births United Kingdom","MRTRMGBR index","PX_LAST"));
		searchList.add(new DataValue("hong_kong_sar_china","Mortality_Rate Infant per 1000 Live Births Hong Kong SAR China","MRTRMHKG index","PX_LAST"));
		searchList.add(new DataValue("indonesia","Mortality Rate Infant per 1000 Live Births Indonesia","MRTRMIDN index","PX_LAST"));
		searchList.add(new DataValue("aruba","Mortality Rate Infant per 1000 Live Births Aruba","MRTRMABW index","PX_LAST"));
		searchList.add(new DataValue("afghanistan","Mortality Rate Infant per 1000 Live Births Afghanistan","MRTRMAFG index","PX_LAST"));
		searchList.add(new DataValue("angola","Mortality Rate Infant per 1000 Live Births Angola","MRTRMAGO index","PX_LAST"));
		searchList.add(new DataValue("albania","Mortality Rate Infant per 1000 Live Births Albania","MRTRMALB index","PX_LAST"));
		searchList.add(new DataValue("andorra","Mortality Rate Infant per 1000 Live Births Andorra","MRTRMAND index","PX_LAST"));
		searchList.add(new DataValue("united_arab_emirates","Mortality Rate Infant per 1000 Live Births United Arab Emirates","MRTRMARE index","PX_LAST"));
		searchList.add(new DataValue("argentina","Mortality Rate Infant per 1000 Live Births Argentina","MRTRMARG index","PX_LAST"));
		searchList.add(new DataValue("armenia","Mortality Rate Infant per 1000 Live Births Armenia","MRTRMARM index","PX_LAST"));
		searchList.add(new DataValue("american_samoa","Mortality Rate Infant per 1000 Live Births American Samoa","MRTRMASM index","PX_LAST"));
		searchList.add(new DataValue("antigua_and_barbuda","Mortality Rate Infant per 1000 Live Births Antigua And Barbuda","MRTRMATG index","PX_LAST"));
		searchList.add(new DataValue("australia","Mortality Rate Infant per 1000 Live Births Australia","MRTRMAUS index","PX_LAST"));
		searchList.add(new DataValue("austria","Mortality Rate Infant per 1000 Live Births Austria","MRTRMAUT index","PX_LAST"));
		searchList.add(new DataValue("azerbaijan","Mortality Rate Infant per 1000 Live Births Azerbaijan","MRTRMAZE index","PX_LAST"));
		searchList.add(new DataValue("burundi","Mortality Rate Infant per 1000 Live Births Burundi","MRTRMBDI index","PX_LAST"));
		searchList.add(new DataValue("belgium","Mortality Rate Infant per 1000 Live Births Belgium","MRTRMBEL index","PX_LAST"));
		searchList.add(new DataValue("benin","Mortality Rate Infant per 1000 Live Births Benin","MRTRMBEN index","PX_LAST"));
		searchList.add(new DataValue("burkina_faso","Mortality Rate Infant per 1000 Live Births Burkina Faso","MRTRMBFA index","PX_LAST"));
		searchList.add(new DataValue("bangladesh","Mortality Rate Infant per 1000 Live Births Bangladesh","MRTRMBGD index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","Mortality Rate Infant per 1000 Live Births Bulgaria","MRTRMBGR index","PX_LAST"));
		searchList.add(new DataValue("bahrain","Mortality Rate Infant per 1000 Live Births Bahrain","MRTRMBHR index","PX_LAST"));
		searchList.add(new DataValue("bahamas_the","Mortality Rate Infant per 1000 Live Births Bahamas The","MRTRMBHS index","PX_LAST"));
		searchList.add(new DataValue("bosnia_and_herzegovina","Mortality Rate Infant per 1000 Live Births Bosnia And Herzegovina","MRTRMBIH index","PX_LAST"));
		searchList.add(new DataValue("belarus","Mortality Rate Infant per 1000 Live Births Belarus","MRTRMBLR index","PX_LAST"));
		searchList.add(new DataValue("belize","Mortality Rate Infant per 1000 Live Births Belize","MRTRMBLZ index","PX_LAST"));
		searchList.add(new DataValue("bermuda","Mortality Rate Infant per 1000 Live Births Bermuda","MRTRMBMU index","PX_LAST"));
		searchList.add(new DataValue("bolivia","Mortality Rate Infant per 1000 Live Births Bolivia","MRTRMBOL index","PX_LAST"));
		searchList.add(new DataValue("brazil","Mortality Rate Infant per 1000 Live Births Brazil","MRTRMBRA index","PX_LAST"));
		searchList.add(new DataValue("barbados","Mortality Rate Infant per 1000 Live Births Barbados","MRTRMBRB index","PX_LAST"));
		searchList.add(new DataValue("brunei_darussalam","Mortality Rate Infant per 1000 Live Births Brunei Darussalam","MRTRMBRN index","PX_LAST"));
		searchList.add(new DataValue("bhutan","Mortality Rate Infant per 1000 Live Births Bhutan","MRTRMBTN index","PX_LAST"));
		searchList.add(new DataValue("botswana","Mortality Rate Infant per 1000 Live Births Botswana","MRTRMBWA index","PX_LAST"));
		searchList.add(new DataValue("central_african_republic","Mortality Rate Infant per 1000 Live Births Central African Republic","MRTRMCAF index","PX_LAST"));
		searchList.add(new DataValue("canada","Mortality Rate Infant per 1000 Live Births Canada","MRTRMCAN index","PX_LAST"));
		searchList.add(new DataValue("switzerland","Mortality Rate Infant per 1000 Live Births Switzerland","MRTRMCHE index","PX_LAST"));
		searchList.add(new DataValue("channel_islands","Mortality Rate Infant per 1000 Live Births Channel Islands","MRTRMCHI index","PX_LAST"));
		searchList.add(new DataValue("chile","Mortality Rate Infant per 1000 Live Births Chile","MRTRMCHL index","PX_LAST"));
		searchList.add(new DataValue("cote_divoire","Mortality Rate Infant per 1000 Live Births Cote Divoire","MRTRMCIV index","PX_LAST"));
		searchList.add(new DataValue("cameroon","Mortality Rate Infant per 1000 Live Births Cameroon","MRTRMCMR index","PX_LAST"));
		searchList.add(new DataValue("congo_dem_rep","Mortality Rate Infant per 1000 Live Births Congo Dem Rep","MRTRMCOD index","PX_LAST"));
		searchList.add(new DataValue("congo_rep","Mortality Rate Infant per 1000 Live Births Congo Rep","MRTRMCOG index","PX_LAST"));
		searchList.add(new DataValue("colombia","Mortality Rate Infant per 1000 Live Births Colombia","MRTRMCOL index","PX_LAST"));
		searchList.add(new DataValue("comoros","Mortality Rate Infant per 1000 Live Births Comoros","MRTRMCOM index","PX_LAST"));
		searchList.add(new DataValue("cape_verde","Mortality Rate Infant per 1000 Live Births Cape Verde","MRTRMCPV index","PX_LAST"));
		searchList.add(new DataValue("costa_rica","Mortality Rate Infant per 1000 Live Births Costa Rica","MRTRMCRI index","PX_LAST"));
		searchList.add(new DataValue("cuba","Mortality Rate Infant per 1000 Live Births Cuba","MRTRMCUB index","PX_LAST"));
		searchList.add(new DataValue("curacao","Mortality Rate Infant per 1000 Live Births Curacao","MRTRMCUW index","PX_LAST"));
		searchList.add(new DataValue("cayman_islands","Mortality Rate Infant per 1000 Live Births Cayman Islands","MRTRMCYM index","PX_LAST"));
		searchList.add(new DataValue("cyprus","Mortality Rate Infant per 1000 Live Births Cyprus","MRTRMCYP index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","Mortality Rate Infant per 1000 Live Births Czech Republic","MRTRMCZE index","PX_LAST"));
		searchList.add(new DataValue("germany","Mortality Rate Infant per 1000 Live Births Germany","MRTRMDEU index","PX_LAST"));
		searchList.add(new DataValue("djibouti","Mortality Rate Infant per 1000 Live Births Djibouti","MRTRMDJI index","PX_LAST"));
		searchList.add(new DataValue("dominica","Mortality Rate Infant per 1000 Live Births Dominica","MRTRMDMA index","PX_LAST"));
		searchList.add(new DataValue("denmark","Mortality Rate Infant per 1000 Live Births Denmark","MRTRMDNK index","PX_LAST"));
		searchList.add(new DataValue("dominican_republic","Mortality Rate Infant per 1000 Live Births Dominican Republic","MRTRMDOM index","PX_LAST"));
		searchList.add(new DataValue("algeria","Mortality Rate Infant per 1000 Live Births Algeria","MRTRMDZA index","PX_LAST"));
		searchList.add(new DataValue("ecuador","Mortality Rate Infant per 1000 Live Births Ecuador","MRTRMECU index","PX_LAST"));
		searchList.add(new DataValue("arab_rep","Mortality Rate Infant per 1000 Live Births Egypt Arab Rep","MRTRMEGY index","PX_LAST"));
		searchList.add(new DataValue("euro_area","Mortality Rate Infant per 1000 Live Births Euro Area","MRTRMEMU index","PX_LAST"));
		searchList.add(new DataValue("eritrea","Mortality Rate Infant per 1000 Live Births Eritrea","MRTRMERI index","PX_LAST"));
		searchList.add(new DataValue("spain","Mortality Rate Infant per 1000 Live Births Spain","MRTRMESP index","PX_LAST"));
		searchList.add(new DataValue("estonia","Mortality Rate Infant per 1000 Live Births Estonia","MRTRMEST index","PX_LAST"));
		searchList.add(new DataValue("ethiopia","Mortality Rate Infant per 1000 Live Births Ethiopia","MRTRMETH index","PX_LAST"));
		searchList.add(new DataValue("european","Mortality Rate Infant per 1000 Live Births European Union","MRTRMEUU index","PX_LAST"));
		searchList.add(new DataValue("finland","Mortality Rate Infant per 1000 Live Births Finland","MRTRMFIN index","PX_LAST"));
		searchList.add(new DataValue("fiji","Mortality Rate Infant per 1000 Live Births Fiji","MRTRMFJI index","PX_LAST"));
		searchList.add(new DataValue("france","Mortality Rate Infant per 1000 Live Births France","MRTRMFRA index","PX_LAST"));
		searchList.add(new DataValue("faeroe","Mortality Rate Infant per 1000 Live Births Faeroe Islands","MRTRMFRO index","PX_LAST"));
		searchList.add(new DataValue("micronesia","Mortality Rate Infant per 1000 Live Births Micronesia Fed Sts","MRTRMFSM index","PX_LAST"));
		searchList.add(new DataValue("gabon","Mortality Rate Infant per 1000 Live Births Gabon","MRTRMGAB index","PX_LAST"));
		searchList.add(new DataValue("georgia","Mortality Rate Infant per 1000 Live Births Georgia","MRTRMGEO index","PX_LAST"));
		searchList.add(new DataValue("ghana","Mortality Rate Infant per 1000 Live Births Ghana","MRTRMGHA index","PX_LAST"));
		searchList.add(new DataValue("gibraltar","Mortality Rate Infant per 1000 Live Births Gibraltar","MRTRMGIB index","PX_LAST"));
		searchList.add(new DataValue("guinea","Mortality Rate Infant per 1000 Live Births Guinea","MRTRMGIN index","PX_LAST"));
		searchList.add(new DataValue("gambia","Mortality Rate Infant per 1000 Live Births Gambia The","MRTRMGMB index","PX_LAST"));
		searchList.add(new DataValue("guineabissau","Mortality Rate Infant per 1000 Live Births Guineabissau","MRTRMGNB index","PX_LAST"));
		searchList.add(new DataValue("equatrial_guinea","Mortality Rate Infant per 1000 Live Births Equatorial Guinea","MRTRMGNQ index","PX_LAST"));
		searchList.add(new DataValue("greece","Mortality Rate Infant per 1000 Live Births Greece","MRTRMGRC index","PX_LAST"));
		searchList.add(new DataValue("grenada","Mortality Rate Infant per 1000 Live Births Grenada","MRTRMGRD index","PX_LAST"));
		searchList.add(new DataValue("greenland","Mortality Rate Infant per 1000 Live Births Greenland","MRTRMGRL index","PX_LAST"));
		searchList.add(new DataValue("guatemala","Mortality Rate Infant per 1000 Live Births Guatemala","MRTRMGTM index","PX_LAST"));
		searchList.add(new DataValue("guam","Mortality Rate Infant per 1000 Live Births Guam","MRTRMGUM index","PX_LAST"));
		searchList.add(new DataValue("guyana","Mortality Rate Infant per 1000 Live Births Guyana","MRTRMGUY index","PX_LAST"));
		searchList.add(new DataValue("iraq","Mortality Rate Infant per 1000 Live Births Iraq","MRTRMIRQ index","PX_LAST"));
		searchList.add(new DataValue("iceland","Mortality Rate Infant per 1000 Live Births Iceland","MRTRMISL index","PX_LAST"));
		searchList.add(new DataValue("israel","Mortality Rate Infant per 1000 Live Births Israel","MRTRMISR index","PX_LAST"));
		searchList.add(new DataValue("italy","Mortality Rate Infant per 1000 Live Births Italy","MRTRMITA index","PX_LAST"));
		searchList.add(new DataValue("jamaica","Mortality Rate Infant per 1000 Live Births Jamaica","MRTRMJAM index","PX_LAST"));
		searchList.add(new DataValue("jordan","Mortality Rate Infant per 1000 Live Births Jordan","MRTRMJOR index","PX_LAST"));
		searchList.add(new DataValue("japan","Mortality Rate Infant per 1000 Live Births Japan","MRTRMJPN index","PX_LAST"));
		searchList.add(new DataValue("kazakhastan","Mortality Rate Infant per 1000 Live Births Kazakhstan","MRTRMKAZ index","PX_LAST"));
		searchList.add(new DataValue("kenya","Mortality Rate Infant per 1000 Live Births Kenya","MRTRMKEN index","PX_LAST"));
		searchList.add(new DataValue("world","World Bank World GDP in Current USD","WGDPWRLD index","PX_LAST"));
		searchList.add(new DataValue("china","World Bank China GDP in Current USD","WGDPCHIN index","PX_LAST"));
		searchList.add(new DataValue("world","World Bank US GDP in Current USD","WGDPUS index","PX_LAST"));
		searchList.add(new DataValue("brazil","World Bank Brazil GDP in Current USD","WGDPBRAZ index","PX_LAST"));
		searchList.add(new DataValue("japan","World Bank Japan GDP in Current USD","WGDPJAPA index","PX_LAST"));
		searchList.add(new DataValue("india","World Bank India GDP in Current USD","WGDPINDI index","PX_LAST"));
		searchList.add(new DataValue("germany","World Bank Germany GDP in Current USD","WGDPGERM index","PX_LAST"));
		searchList.add(new DataValue("united_kingdom","World Bank United Kingdom GDP in Current USD","WGDPUK index","PX_LAST"));
		searchList.add(new DataValue("mexcio","World Bank Mexico GDP in Current USD","WGDPMEXI index","PX_LAST"));
		searchList.add(new DataValue("korea","World Bank Korea GDP in Current USD","WGDPKORE index","PX_LAST"));
		searchList.add(new DataValue("argentina","World Bank Argentina GDP in Current USD","WGDPARGE index","PX_LAST"));
		searchList.add(new DataValue("italy","World Bank Italy GDP in Current USD","WGDPITAL index","PX_LAST"));
		searchList.add(new DataValue("indonesia","World Bank Indonesia GDP in Current USD","WGDPINDO index","PX_LAST"));
		searchList.add(new DataValue("russia","World Bank Russian Federation GDP in Current USD","WGDPRUSS index","PX_LAST"));
		searchList.add(new DataValue("autralia","WOrld Bank Australia GDP in Current USD","WGDPAUST index","PX_LAST"));
		searchList.add(new DataValue("colombia","World Bank Colombia GDP in Current USD","WGDPCOLO index","PX_LAST"));
		searchList.add(new DataValue("chile","World Bank Chile GDP in Current USD","WGDPCHIL index","PX_LAST"));
		searchList.add(new DataValue("canada","World Bank Canada GDP in Current USD","WGDPCANA index","PX_LAST"));
		searchList.add(new DataValue("france","World Bank France GDP in Current USD","WGDPFRAN index","PX_LAST"));
		searchList.add(new DataValue("hong_kong","World Bank Hong Kong GDP in Current USD","WGDPHONG index","PX_LAST"));
		searchList.add(new DataValue("venezuela","World Bank Venezuela GDP in Current USD","WGDPVENE index","PX_LAST"));
		searchList.add(new DataValue("peru","World Bank Peru GDP in Current USD","WGDPPERU index","PX_LAST"));
		searchList.add(new DataValue("saudi_arabia","World Bank Saudi Arabia GDP in Current USD","WGDPSAUD index","PX_LAST"));
		searchList.add(new DataValue("turkey","World Bank Turkey GDP in Current USD","WGDPTURK index","PX_LAST"));
		searchList.add(new DataValue("spain","World Bank Spain GDP in Current USD","WGDPSPAI index","PX_LAST"));
		searchList.add(new DataValue("poland","World Bank Poland GDP in Current USD","WGDPPOLA index","PX_LAST"));
		searchList.add(new DataValue("malaysia","World Bank Malaysia GDP in Current USD","WGDPMALY index","PX_LAST"));
		searchList.add(new DataValue("taiwan","World Bank Taiwan GDP in Current USD","WGDPTAIW index","PX_LAST"));
		searchList.add(new DataValue("philippines","World Bank Philippines GDP in Current USD","WGDPPHIL index","PX_LAST"));
		searchList.add(new DataValue("africa","World Bank South Africa GDP in Current USD","WGDPSOUT index","PX_LAST"));
		searchList.add(new DataValue("nigeria","World Bank Nigeria GDP in Current USD","WGDPNGIA index","PX_LAST"));
		searchList.add(new DataValue("singapore","World Bank Singapore GDP in Current USD","WGDPSING index","PX_LAST"));
		searchList.add(new DataValue("thailand","World Bank Thailand GDP in Current USD","WGDPTHAI index","PX_LAST"));
		searchList.add(new DataValue("hungary","World Bank Hungary GDP in Current USD","WGDPHUNG index","PX_LAST"));
		searchList.add(new DataValue("vietnam","World Bank Vietnam GDP in Current USD","WGDPVIET index","PX_LAST"));
		searchList.add(new DataValue("switzerland","World Bank Switzerland GDP in Current USD","WGDPSWIT index","PX_LAST"));
		searchList.add(new DataValue("belgium","World Bank Belgium GDP in Current USD","WGDPBELG index","PX_LAST"));
		searchList.add(new DataValue("kazakhstan","World Bank Kazakhstan GDP in Current USD","WGDPKAZA index","PX_LAST"));
		searchList.add(new DataValue("ecuador","World Bank Ecuador GDP in Current USD","WGDPECUA index","PX_LAST"));
		searchList.add(new DataValue("greece","World Bank Greece GDP in Current USD","WGDPGREE index","PX_LAST"));
		searchList.add(new DataValue("ireland","World Bank Ireland GDP in Current USD","WGDPIREL index","PX_LAST"));
		searchList.add(new DataValue("austria","World Bank Austria GDP in Current USD","WGDPASTI index","PX_LAST"));
		searchList.add(new DataValue("bulgaria","World Bank Bulgaria GDP in Current USD","WGDPBULG index","PX_LAST"));
		searchList.add(new DataValue("mongolia","World Bank Mongolia GDP in Current USD","WGDPMONG index","PX_LAST"));
		searchList.add(new DataValue("kuwait","World Bank Kuwait GDP in Current USD","WGDPKUWA index","PX_LAST"));
		searchList.add(new DataValue("panama","World Bank Panama GDP in Current USD","WGDPPANA index","PX_LAST"));
		searchList.add(new DataValue("portugal","World Bank Portugal GDP in Current USD","WGDPPORT index","PX_LAST"));
		searchList.add(new DataValue("pakistan","World Bank Pakistan GDP in Current USD","WGDPPAKI index","PX_LAST"));
		searchList.add(new DataValue("ghana","World Bank Ghana GDP in Current USD","WGDPGHAN index","PX_LAST"));
		searchList.add(new DataValue("israel","World Bank Israel GDP in Current USD","WGDPISRA index","PX_LAST"));
		searchList.add(new DataValue("romania","World Bank Romania GDP in Current USD","WGDPROMA index","PX_LAST"));
		searchList.add(new DataValue("sweden","World Bank Sweden GDP in Current USD","WGDPSWED index","PX_LAST"));
		searchList.add(new DataValue("iran","World Bank Iran GDP in Current USD","WGDPIRAN index","PX_LAST"));
		searchList.add(new DataValue("czech_republic","World Bank Czech Republic GDP in Current USD","WGDPCZEC index","PX_LAST"));
		searchList.add(new DataValue("netherlands","World Bank Netherlands GDP in Current USD","WGDPNETH index","PX_LAST"));
		searchList.add(new DataValue("afghanistan","World Bank Afghanistan GDP in Current USD","WGDPAFGH index","PX_LAST"));
		searchList.add(new DataValue("angola","World Bank Angola GDP in Current USD","WGDPANGO index","PX_LAST"));
		searchList.add(new DataValue("bangladesh","World Bank Bangladesh GDP in Current USD","WGDPBANG index","PX_LAST"));
		searchList.add(new DataValue("norway","World Bank Norway GDP in Current USD","WGDPNORW index","PX_LAST"));
		searchList.add(new DataValue("arab_emirates","World Bank United Arab Emirates GDP in Current USD","WGDPUAE index","PX_LAST"));
		searchList.add(new DataValue("finland","World Bank Finland GDP in Current USD","WGDPFINL index","PX_LAST"));
		searchList.add(new DataValue("ukraine","World Bank Ukraine GDP in Current USD","WGDPUKRA index","PX_LAST"));
		searchList.add(new DataValue("macau","World Bank Macau GDP","WGDPMACA index","PX_LAST"));
		searchList.add(new DataValue("cambodia","World Bank Cambodia GDP in Current USD","WGDPCAMB index","PX_LAST"));
		searchList.add(new DataValue("mozabique","World Bank Mozambique GDP in Current USD","WGDPMOZA index","PX_LAST"));
		searchList.add(new DataValue("cote_d'ivorie","World Bank Cote d'Ivoire GDP in Current USD","WGDPCOTE index","PX_LAST"));
		searchList.add(new DataValue("kenya","World Bank Kenya GDP in Current USD","WGDPKENY index","PX_LAST"));
		searchList.add(new DataValue("syrian_arab_republic","World Bank Syrian Arab Republic GDP in Current USD","WGDPSYRI index","PX_LAST"));
		searchList.add(new DataValue("uruguay","World Bank Uruguay GDP in Current USD","WGDPURUG index","PX_LAST"));
		searchList.add(new DataValue("latvia","World Bank Latvia GDP in Current USD","WGDPLATV index","PX_LAST"));
		searchList.add(new DataValue("liberia","World Bank Liberia GDP in Current USD","WGDPLIBE index","PX_LAST"));
		searchList.add(new DataValue("puerto_rico","World Bank Puerto Rico GDP in Current USD","WGDPPUER index","PX_LAST"));
		searchList.add(new DataValue("azarbaijan","World Bank Azerbaijan GDP in Current USD","WGDPAZER index","PX_LAST"));
		searchList.add(new DataValue("bahrain","World Bank Bahrain GDP in Current USD","WGDPBAHR index","PX_LAST"));
		searchList.add(new DataValue("bermuda","World Bank Bermuda GDP in Current USD","WGDPBERM index","PX_LAST"));
		searchList.add(new DataValue("algeria","World Bank Algeria GDP in Current USD","WGDPALGE index","PX_LAST"));
		searchList.add(new DataValue("egypt","World Bank Egypt GDP in Current USD","WGDPEGYP index","PX_LAST"));
		searchList.add(new DataValue("sierra_leone","World Bank Sierra Leone GDP in Current USD","WGDPSIER index","PX_LAST"));
		searchList.add(new DataValue("uzbakistan","World Bank Uzbekistan GDP in Current USD","WGDPUZBE index","PX_LAST"));
		searchList.add(new DataValue("bolivia","World Bank Bolivia GDP in Current USD","WGDPBOLI index","PX_LAST"));
		searchList.add(new DataValue("brunei_darussalam","World Bank Brunei Darussalam GDP in Current USD","WGDPBRUN index","PX_LAST"));
		searchList.add(new DataValue("georgia","World Bank Georgia GDP in Current USD","WGDPGEOR index","PX_LAST"));
		searchList.add(new DataValue("antigua","World Bank Antigua and Barbuda GDP in Current USD","WGDPANTI index","PX_LAST"));
		searchList.add(new DataValue("iraq","World Bank Iraq GDP in Current USD","WGDPIRAQ index","PX_LAST"));
		searchList.add(new DataValue("luxembourg","World Bank Luxembourg GDP in Current USD","WGDPLUXE index","PX_LAST"));
		searchList.add(new DataValue("slovak_republic","World Bank Slovak Republic GDP in Current USD","WGDPSLOV index","PX_LAST"));
		searchList.add(new DataValue("zambia","World Bank Zambia GDP in Current USD","WGDPZAMB index","PX_LAST"));
		searchList.add(new DataValue("belarus","World Bank Belarus GDP in Current USD","WGDPBELA index","PX_LAST"));
		searchList.add(new DataValue("nigeria","World Bank Nigeria GDP in Current USD YoY","WGDPNGIY index","PX_LAST"));
		searchList.add(new DataValue("slovenia","World Bank Slovenia GDP in Current USD","WGDPSLVE index","PX_LAST"));
		searchList.add(new DataValue("turkmenistan","World Bank Turkmenistan GDP in Current USD","WGDPTRKM index","PX_LAST"));
		searchList.add(new DataValue("morocco","World Bank Morocco GDP in Current USD","WGDPMORO index","PX_LAST"));
		searchList.add(new DataValue("qatar","World Bank Qatar GDP in Current USD","WGDPQATA index","PX_LAST"));
		searchList.add(new DataValue("el_salvador","World Bank El Salvador GDP in Current USD","WGDPELSA index","PX_LAST"));
		searchList.add(new DataValue("honduras","World Bank Honduras GDP in Current USD","WGDPHOND index","PX_LAST"));
		searchList.add(new DataValue("iceland","World Bank Iceland GDP in Current USD","WGDPICEL index","PX_LAST"));
		searchList.add(new DataValue("jamaica","World Bank Jamaica GDP in Current USD","WGDPJAMA index","PX_LAST"));
		searchList.add(new DataValue("costa_rica","World Bank Costa Rica GDP in Current USD","WGDPCOST index","PX_LAST"));
		searchList.add(new DataValue("croatia","World Bank Croatia GDP in Current USD","WGDPCROA index","PX_LAST"));
		searchList.add(new DataValue("denmark","World Bank Denmark GDP in Current USD","WGDPDENM index","PX_LAST"));
		searchList.add(new DataValue("lithuania","World Bank Lithuania GDP in Current USD","WGDPLITH index","PX_LAST"));
		searchList.add(new DataValue("new_zeland","World Bank New Zealand GDP in Current USD","WGDPNEWZ index","PX_LAST"));
		searchList.add(new DataValue("sri_lanka","World Bank Sri Lanka GDP in Current USD","WGDPSRIL index","PX_LAST"));
		searchList.add(new DataValue("gabon","World Bank Gabon GDP in Current USD","WGDPGABO index","PX_LAST"));
		searchList.add(new DataValue("malawi","World Bank Malawi GDP in Current USD","WGDPMALA index","PX_LAST"));
		searchList.add(new DataValue("niger","World Bank Niger GDP in Current USD","WGDPNIGE index","PX_LAST"));
		searchList.add(new DataValue("tajikistan","World Bank Tajikistan GDP in Current USD","WGDPTAJI index","PX_LAST"));
		searchList.add(new DataValue("republic_of_congo","World Bank Republic of Congo GDP in Current USD","WGDPCONR index","PX_LAST"));
		searchList.add(new DataValue("papua","World Bank Papua New Guinea GDP in Current USD","WGDPPAPU index","PX_LAST"));
		searchList.add(new DataValue("somalia","World Bank Somalia GDP in Current USD","WGDPSOMA index","PX_LAST"));
		searchList.add(new DataValue("suriname","World Bank Suriname GDP in Current USD","WGDPSURI index","PX_LAST"));
		searchList.add(new DataValue("bahamas","World Bank Bahamas GDP in Current USD","WGDPBAHA index","PX_LAST"));
		searchList.add(new DataValue("cayman","World Bank Cayman Islands GDP in Current USD","WGDPCAYM index","PX_LAST"));
		searchList.add(new DataValue("dominican_republic","World Bank Dominican Republic GDP in Current USD","WGDPDREP index","PX_LAST"));
		searchList.add(new DataValue("ethiopia","World Bank Ethiopia GDP in Current USD","WGDPETHI index","PX_LAST"));
		searchList.add(new DataValue("macedonia","World Bank Macedonia GDP in Current USD","WGDPMACE index","PX_LAST"));
		searchList.add(new DataValue("paraguay","World Bank Paraguay GDP in Current USD","WGDPPARA index","PX_LAST"));
		searchList.add(new DataValue("serbia","World Bank Serbia GDP in Current USD","WGDPSERB index","PX_LAST"));
		searchList.add(new DataValue("guatemala","World Bank Guatemala GDP in Current USD","WGDPGUAT index","PX_LAST"));
		searchList.add(new DataValue("guinea","World Bank Guinea GDP in Current USD","WGDPGUIN index","PX_LAST"));
		searchList.add(new DataValue("lebanon","World Bank Lebanon GDP in Current USD","WGDPLEBA index","PX_LAST"));
		searchList.add(new DataValue("namibia","World Bank Namibia GDP in Current USD","WGDPNAMI index","PX_LAST"));
		searchList.add(new DataValue("tanzania","World Bank Tanzania GDP in Current USD","WGDPTANZ index","PX_LAST"));
		searchList.add(new DataValue("albania","World Bank Albania GDP in Current USD","WGDPALBA index","PX_LAST"));
		searchList.add(new DataValue("armenia","World Bank Armenia GDP in Current USD","WGDPARME index","PX_LAST"));
		searchList.add(new DataValue("aruba","World Bank Aruba GDP in Current USD","WGDPARUB index","PX_LAST"));
		searchList.add(new DataValue("bhutan","World Bank Bhutan GDP in Current USD","WGDPBHUT index","PX_LAST"));
		searchList.add(new DataValue("botswana","World Bank Botswana GDP in Current USD","WGDPBOTS index","PX_LAST"));
		searchList.add(new DataValue("dominica","World Bank Dominica GDP in Current USD","WGDPDOMI index","PX_LAST"));
		searchList.add(new DataValue("estonia","World Bank Estonia GDP in Current USD","WGDPESTO index","PX_LAST"));
		searchList.add(new DataValue("jordan","World Bank Jordan GDP in Current USD","WGDPJORD index","PX_LAST"));
		searchList.add(new DataValue("lesotho","World Bank Lesotho GDP in Current USD","WGDPLESO index","PX_LAST"));
		searchList.add(new DataValue("north_america","World Bank North America GDP in Current USD","WGDPNTHA index","PX_LAST"));
		searchList.add(new DataValue("congo_democratic_republic","World Bank Congo Democratic Republic GDP in Current USD","WGDPCONG index","PX_LAST"));
		searchList.add(new DataValue("cyprus","World Bank Cyprus GDP in Current USD","WGDPCYPR index","PX_LAST"));
		searchList.add(new DataValue("guyana","World Bank Guyana GDP in Current USD","WGDPGUYA index","PX_LAST"));
		searchList.add(new DataValue("libya","World Bank Libya GDP in Current USD","WGDPLIBY index","PX_LAST"));
		searchList.add(new DataValue("islands","World Bank Marshall Islands GDP in Current USD","WGDPMARS index","PX_LAST"));
		searchList.add(new DataValue("mauritius","World Bank Mauritius GDP in Current USD","WGDPMRTS index","PX_LAST"));
		searchList.add(new DataValue("nicaragua","World Bank Nicaragua GDP in Current USD","WGDPNICA index","PX_LAST"));
		searchList.add(new DataValue("tunisia","World Bank Tunisia GDP in Current USD","WGDPTUNI index","PX_LAST"));
		searchList.add(new DataValue("zimbabwe","World Bank Zimbabwe GDP in Current USD","WGDPZIMB index","PX_LAST"));
		searchList.add(new DataValue("barbados","World Bank Barbados GDP in Current USD","WGDPBARB index","PX_LAST"));
		searchList.add(new DataValue("bosnia","World Bank Bosnia and Herzegovina GDP in Current USD","WGDPBOSN index","PX_LAST"));
		searchList.add(new DataValue("kosovo","World Bank Kosovo GDP in Current USD","WGDPKOSO index","PX_LAST"));
		searchList.add(new DataValue("kyrgyz","World Bank Kyrgyz Republic GDP in Current USD","WGDPKYRG index","PX_LAST"));
		searchList.add(new DataValue("leichtenstein","World Bank Liechtenstein GDP in Current USD","WGDPLIEC index","PX_LAST"));
		searchList.add(new DataValue("mali","World Bank Mali GDP in Current USD","WGDPMALI index","PX_LAST"));
		searchList.add(new DataValue("malta","World Bank Malta GDP in Current USD","WGDPMALT index","PX_LAST"));
		searchList.add(new DataValue("uganda","World Bank Uganda GDP in Current USD","WGDPUGAN index","PX_LAST"));
		searchList.add(new DataValue("yemen","World Bank Yemen GDP in Current USD","WGDPYEME index","PX_LAST"));
		searchList.add(new DataValue("andorra","World Bank Andorra GDP in Current USD","WGDPANDO index","PX_LAST"));
		searchList.add(new DataValue("belize","World Bank Belize GDP in Current USD","WGDPBELI index","PX_LAST"));
		searchList.add(new DataValue("benin","World Bank Benin GDP in Current USD","WGDPBENI index","PX_LAST"));
		searchList.add(new DataValue("burjina_faso","World Bank Burkina Faso GDP in Current USD","WGDPBURK index","PX_LAST"));
		searchList.add(new DataValue("burundi","World Bank Burundi GDP in Current USD","WGDPBURU index","PX_LAST"));
		searchList.add(new DataValue("cameroon","World Bank Cameroon GDP in Current USD","WGDPCAME index","PX_LAST"));
		searchList.add(new DataValue("cape_verde","World Bank Cape Verde GDP in Current USD","WGDPCAPE index","PX_LAST"));
		searchList.add(new DataValue("chad","World Bank Chad GDP in Current USD","WGDPCHAD index","PX_LAST"));
		searchList.add(new DataValue("channel_islands","World Bank Channel Islands GDP in Current USD","WGDPCHAN index","PX_LAST"));
		searchList.add(new DataValue("comoros","World Bank Comoros GDP in Current USD","WGDPCOMO index","PX_LAST"));
		searchList.add(new DataValue("djibouti","World Bank Djibouti GDP in Current USD","WGDPDJIB index","PX_LAST"));
		searchList.add(new DataValue("equatorial_guinea","World Bank Equatorial Guinea GDP in Current USD","WGDPEQUA index","PX_LAST"));
		searchList.add(new DataValue("eritrea","World Bank Eritrea GDP in Current USD","WGDPERIT index","PX_LAST"));
		searchList.add(new DataValue("fiji","World Bank Fiji GDP in Current USD","WGDPFIJI index","PX_LAST"));
		searchList.add(new DataValue("french","World Bank French Polynesia GDP in Current USD","WGDPFREN index","PX_LAST"));
		searchList.add(new DataValue("gambia","World Bank Gambia GDP in Current USD","WGDPGAMB index","PX_LAST"));
		searchList.add(new DataValue("guinea_bissau","World Bank Guinea-Bissau GDP in Current USD","WGDPGBIS index","PX_LAST"));
		searchList.add(new DataValue("grenada","World Bank Grenada GDP in Current USD","WGDPGREN index","PX_LAST"));
		searchList.add(new DataValue("greenland","World Bank Greenland GDP in Current USD","WGDPGRLD index","PX_LAST"));
		searchList.add(new DataValue("haiti","World Bank Haiti GDP in Current USD","WGDPHAIT index","PX_LAST"));
		searchList.add(new DataValue("madagascar","World Bank Madagascar GDP in Current USD","WGDPMADA index","PX_LAST"));
		searchList.add(new DataValue("maldives","World Bank Maldives GDP in Current USD","WGDPMALD index","PX_LAST"));
		searchList.add(new DataValue("mauritania","World Bank Mauritania GDP in Current USD","WGDPMAUR index","PX_LAST"));
		searchList.add(new DataValue("montenegro","World Bank Montenegro GDP in Current USD","WGDPMNE index","PX_LAST"));
		searchList.add(new DataValue("moldova","World Bank Moldova GDP in Current USD","WGDPMOLD index","PX_LAST"));
		searchList.add(new DataValue("netherlands","World Bank Netherlands Antilles GDP in Current USD","WGDPNANT index","PX_LAST"));
		searchList.add(new DataValue("new_caledonia","World Bank New Caledonia GDP in Current USD","WGDPNECA index","PX_LAST"));
		searchList.add(new DataValue("nepal","World Bank Nepal GDP in Current USD","WGDPNEPA index","PX_LAST"));
		searchList.add(new DataValue("palau","World Bank Palau GDP in Current USD","WGDPPALA index","PX_LAST"));
		searchList.add(new DataValue("rwanda","World Bank Rwanda GDP in Current USD","WGDPRWAN index","PX_LAST"));
		searchList.add(new DataValue("samoa","World Bank Samoa GDP in Current USD","WGDPSAMO index","PX_LAST"));
		searchList.add(new DataValue("san_marino","World Bank San Marino GDP in Current USD","WGDPSAN index","PX_LAST"));
		searchList.add(new DataValue("senegal","World Bank Senegal GDP in Current USD","WGDPSENE index","PX_LAST"));
		searchList.add(new DataValue("seychelles","World Bank Seychelles GDP in Current USD","WGDPSEYC index","PX_LAST"));
		searchList.add(new DataValue("south_asia","World Bank South Asia GDP in Current USD","WGDPSOAS index","PX_LAST"));
		searchList.add(new DataValue("sudan","World Bank Sudan GDP in Current USD","WGDPSUDA index","PX_LAST"));
		searchList.add(new DataValue("swaziland","World Bank Swaziland GDP in Current USD","WGDPSWAZ index","PX_LAST"));
		searchList.add(new DataValue("timor_leste","World Bank Timor-Leste GDP in Current USD","WGDPTIMO index","PX_LAST"));
		searchList.add(new DataValue("tongo","World Bank Togo GDP in Current USD","WGDPTOGO index","PX_LAST"));
		searchList.add(new DataValue("tonga","World Bank Tonga GDP in Current USD","WGDPTONG index","PX_LAST"));
		searchList.add(new DataValue("trinidad_and_tobago","World Bank Trinidad & Tobago GDP in Current USD","WGDPTRIN index","PX_LAST"));
		searchList.add(new DataValue("virgin_islands","World Bank Virgin Islands (U.S.) GDP in Current USD","WGDPVIRG index","PX_LAST"));
		searchList.add(new DataValue("micronesia","World Bank Micronesia in Current USD","WGDPMICR index","PX_LAST"));
		
		PrintIt pi = null;
		
		try {
			pi = new PrintIt();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		for(DataValue dv : searchList){
			try {
				pi.printIt(dv.getCountry()+","+dv.getDesc()+","+dv.getValue());
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		pi.closeIt();
	}
	
	public DataValue getRandomValue() {
		return searchList.get((int)(Math.random()*searchList.size()-1));
	}
	
	public String getValue(String country, String desc){
		int i=0,j=searchList.size();
		
		for (DataValue dv : searchList) {
			if((country==dv.getCountry())&&(desc==dv.getDesc())) {
				System.out.print("getting value: "+((Integer)i).toString()+"/"+((Integer)j).toString());
				return dv.getValue();
			}
		}
		return null;
	}
		
	public static String find(String inSecurity, String inField) throws Exception {
		String retString=null;
		
		SessionOptions sessionOptions = new SessionOptions();
		sessionOptions.setServerHost("10.8.8.1");
		sessionOptions.setServerPort(8194);

		Session session = new Session(sessionOptions);

		if (!session.start()) {
			System.out.println("Could not start session.");
			System.exit(1);
		}
		if (!session.openService("//blp/refdata")) {
			System.out.println("Could not open service " + "//blp/refdata");
			System.exit(1);
		}
		CorrelationID requestID = new CorrelationID(1);

		Service refDataSvc = session.getService("//blp/refdata");
		Request request = refDataSvc.createRequest("ReferenceDataRequest");
		request.append("securities", inSecurity);
		request.append("fields", inField);
		session.sendRequest(request, requestID);
		boolean continueToLoop = true;
		while (continueToLoop) {
			Event event = session.nextEvent();

			switch (event.eventType().intValue()) {

			case Event.EventType.Constants.RESPONSE: // final event
				continueToLoop = false; // fall through
				MessageIterator iter = event.messageIterator();
				while (iter.hasNext()) {
					Message message = iter.next();
					retString=processMessage(message);
				}
			case Event.EventType.Constants.PARTIAL_RESPONSE:
				handleResponseEvent(event);
				break;

			default:
				handleOtherEvent(event);
				break;
			}
		}
		return retString;
	}

	private static void handleOtherEvent(Event event) throws Exception {
		//System.out.println("EventType=" + event.eventType());
		MessageIterator iter = event.messageIterator();
		while (iter.hasNext()) {
			Message message = iter.next();
			//System.out.println("correlationID=" + message.correlationID());
			//System.out.println("messageType=" + message.messageType());
			message.print(System.out);
			if (Event.EventType.Constants.SESSION_STATUS == event.eventType()
					.intValue()
					&& "SessionTerminated" == message.messageType().toString()) {
				//System.out.println("Terminating: " + message.messageType());
				System.exit(1);
			}
		}
	}
	
	private static void handleResponseEvent(Event event) throws Exception {
		//System.out.println("EventType =" + event.eventType());
		MessageIterator iter = event.messageIterator();
		while (iter.hasNext()) {
			Message message = iter.next();
			//System.out.println("correlationID=" + message.correlationID());
			//System.out.println("messageType =" + message.messageType());
			//message.print(System.out);
			processMessage(message);
		}
	}
	
	private static String processMessage(Message msg) throws Exception {
		String retString=null;
		
        Element securityDataArray = msg.getElement(SECURITY_DATA);
        int numSecurities = securityDataArray.numValues();
        for (int i = 0; i < numSecurities; ++i) {
            Element securityData = securityDataArray.getValueAsElement(i);
            //System.out.println(securityData.getElementAsString(SECURITY));
            securityData.getElementAsString(SECURITY);
            Element fieldData = securityData.getElement(FIELD_DATA);
            for (int j = 0; j < fieldData.numElements(); ++j) {
                Element field = fieldData.getElement(j);
                if (field.isNull()) {
                    System.out.println(field.name() + " is NULL.");
                } else {
                    //System.out.println("Field: "+field.getValueAsString());
                	retString=field.getValueAsString();
                }
            }
            Element fieldExceptionArray =
                securityData.getElement(FIELD_EXCEPTIONS);
            for (int k = 0; k < fieldExceptionArray.numValues(); ++k) {
                Element fieldException =
                    fieldExceptionArray.getValueAsElement(k);
                System.out.println(
                        fieldException.getElement(ERROR_INFO).getElementAsString("category")
                        + ": " + fieldException.getElementAsString(FIELD_ID));
            }
            System.out.println("\n");
        }
        
        return retString;
    }
}
